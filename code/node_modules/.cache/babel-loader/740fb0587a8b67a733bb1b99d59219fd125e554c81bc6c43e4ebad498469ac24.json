{"ast":null,"code":"import React,{useState}from'react';import{ThemeProvider,createTheme}from'@mui/material/styles';import Container from'@mui/material/Container';import Paper from'@mui/material/Paper';import Box from'@mui/material/Box';import Button from'@mui/material/Button';import TextField from'@mui/material/TextField';import Typography from'@mui/material/Typography';import Grid from'@mui/material/Grid';import{fetchUserData,fetchPublicRepoData}from'../functions/api';import UserInfo from'./UserInfo';import RepoList from'./RepoList';import GraphQL from'./graphql';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=createTheme({palette:{primary:{main:'#2196f3'},secondary:{main:'#f50057'}}});export default function GitHub(){const[username,setUsername]=useState('');const[user,setUser]=useState(null);const[publicrepos,setPublicrepos]=useState([]);const[userDataJSON,setUserDataJSON]=useState('');const[combinedInfoJSON,setCombinedInfoJSON]=useState('');const[timeOnGitHub,setTimeOnGitHub]=useState('');const[activeLevel,setActiveLevel]=useState('');const[userValue,setUserValue]=useState(null);const[mostUsedLanguage,setMostUsedLanguage]=useState('');const[averageRepoSize,setAverageRepoSize]=useState(0);const[totalStars,setTotalStars]=useState(0);const[totalForks,setTotalForks]=useState(0);const[averageStars,setAverageStars]=useState(0);const[averageForks,setAverageForks]=useState(0);const[repositoryActivity,setRepositoryActivity]=useState('');//1. user information manipulation and generation of insights:\nconst calculateTimeOnGitHub=createdAt=>{const currentDate=new Date();const createdDate=new Date(createdAt);const timeDiff=currentDate.getTime()-createdDate.getTime();const daysOnGitHub=Math.floor(timeDiff/(1000*3600*24));return\"\".concat(daysOnGitHub,\" days\");};const calculateActiveLevel=updatedAt=>{const currentDate=new Date();const updatedDate=new Date(updatedAt);const timeDiff=currentDate.getTime()-updatedDate.getTime();const daysSinceLastUpdate=Math.floor(timeDiff/(1000*3600*24));if(daysSinceLastUpdate<=30){return\"Very Active\";}else if(daysSinceLastUpdate<=90){return\"Relatively Active\";}else if(daysSinceLastUpdate<=365){return\"Not Very Active\";}else{return\"Not Active\";}};const calculateUserValue=(followers,publicRepos)=>{const weightFollowers=0.6;const weightPublicRepos=0.4;const userValue=followers*weightFollowers+publicRepos*weightPublicRepos;const thresholdGood=100;let category=\"\";if(userValue<thresholdGood){category=\"Relatively good user value\";}else if(userValue<2*thresholdGood){category=\"Okay user value\";}else{category=\"Great user value\";}return{category,value:userValue};};//2. user repo information manipulation and generation of insights\nconst calculateMostUsedLanguage=repos=>{const languageCount={};repos.forEach(repo=>{if(repo.language){if(languageCount[repo.language]){languageCount[repo.language]++;}else{languageCount[repo.language]=1;}}});return Object.keys(languageCount).reduce((a,b)=>languageCount[a]>languageCount[b]?a:b,'');};const calculateAverageRepoSize=repos=>{if(repos.length===0)return 0;const totalSize=repos.reduce((sum,repo)=>sum+repo.size,0);return totalSize/repos.length;};const calculateTotalStars=repos=>{return repos.reduce((sum,repo)=>sum+repo.stargazers_count,0);};const calculateTotalForks=repos=>{return repos.reduce((sum,repo)=>sum+repo.forks_count,0);};const calculateAverageStars=repos=>{if(repos.length===0)return 0;return calculateTotalStars(repos)/repos.length;};const calculateAverageForks=repos=>{if(repos.length===0)return 0;return calculateTotalForks(repos)/repos.length;};const calculateRepositoryActivity=repos=>{const currentDate=new Date();const lastPushedDates=repos.map(repo=>new Date(repo.pushed_at).getTime());// Extract timestamp\nconst mostRecentPush=new Date(Math.max.apply(null,lastPushedDates));const daysSinceLastPush=Math.floor((currentDate.getTime()-mostRecentPush.getTime())/(1000*3600*24));if(daysSinceLastPush<=30){return\"Very Active\";}else if(daysSinceLastPush<=90){return\"Relatively Active\";}else if(daysSinceLastPush<=365){return\"Not Very Active\";}else{return\"Not Active\";}};//enable the download original json data function\nconst downloadJSON=(json,filename)=>{const blob=new Blob([json],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};//the analysis function\nconst GenerateAnalysis=async()=>{if(username.trim()!==''){//set the user data\nconst dataUser=await fetchUserData(username);if(dataUser){setUser(dataUser);setUserDataJSON(JSON.stringify(dataUser,null,2));const filteredUser={login:dataUser.login,html_url:dataUser.html_url,name:dataUser.name,company:dataUser.company,location:dataUser.location,bio:dataUser.bio,public_repos:dataUser.public_repos,followers:dataUser.followers,following:dataUser.following,created_at:dataUser.created_at,updated_at:dataUser.updated_at,email:dataUser.email,hireable:dataUser.hireable};const additionalInfo={timeOnGitHub:calculateTimeOnGitHub(dataUser.created_at),activeLevel:calculateActiveLevel(dataUser.updated_at),userValue:calculateUserValue(dataUser.followers,dataUser.public_repos)};setTimeOnGitHub(additionalInfo.timeOnGitHub);setActiveLevel(additionalInfo.activeLevel);setUserValue(additionalInfo.userValue);const combinedInfo={...filteredUser,...additionalInfo};setCombinedInfoJSON(JSON.stringify(combinedInfo,null,2));}//set the public repo data\nconst dataPublic=await fetchPublicRepoData(username);if(dataPublic){setPublicrepos(dataPublic);setMostUsedLanguage(calculateMostUsedLanguage(dataPublic));setAverageRepoSize(calculateAverageRepoSize(dataPublic));setTotalStars(calculateTotalStars(dataPublic));setTotalForks(calculateTotalForks(dataPublic));setAverageStars(calculateAverageStars(dataPublic));setAverageForks(calculateAverageForks(dataPublic));setRepositoryActivity(calculateRepositoryActivity(dataPublic));}}};return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(Container,{style:{display:'flex',justifyContent:'center',alignItems:'center',minHeight:'100vh',fontFamily:'Arial'},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,style:{padding:'20px',marginTop:'20px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(Box,{mb:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"GitHub User and Repo Analysis\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"for Recruiters \\uD83D\\uDD0D\"})]}),/*#__PURE__*/_jsx(Box,{mb:3,children:/*#__PURE__*/_jsx(TextField,{label:\"GitHub Username\",variant:\"outlined\",value:username,onChange:e=>setUsername(e.target.value),fullWidth:true})}),/*#__PURE__*/_jsx(Box,{mb:1,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:GenerateAnalysis,style:{backgroundColor:'lightblue'},children:\"\\u2705 Generate Analysis\"})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,justifyContent:\"center\",style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>downloadJSON(userDataJSON,\"\".concat(username,\"_data.json\")),disabled:!userDataJSON,style:{backgroundColor:'lightblue'},children:\"\\u2B07\\uFE0F Download Original User Data\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:()=>downloadJSON(JSON.stringify(publicrepos,null,2),\"\".concat(username,\"_repos.json\")),disabled:publicrepos.length===0,style:{backgroundColor:'lightblue'},children:\"\\u2B07\\uFE0F Download Original Repository Data\"})})]}),/*#__PURE__*/_jsx(GraphQL,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{backgroundColor:'lightblue',borderRadius:'10px',padding:'5px'},children:\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB User Analysis\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:user&&/*#__PURE__*/_jsx(UserInfo,{user:user,timeOnGitHub:timeOnGitHub,activeLevel:activeLevel,userValue:userValue,mostUsedLanguage:mostUsedLanguage})})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{backgroundColor:'lightblue',borderRadius:'10px',padding:'5px'},children:\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBB Repository Analysis\"}),mostUsedLanguage&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,justifyContent:\"center\",children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Most Frequently Used Programming Language: \",mostUsedLanguage]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Average Repository Size: \",averageRepoSize,\" KB\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Total Stars: \",totalStars]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Total Forks: \",totalForks]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Average Stars per Repository: \",averageStars.toFixed(2)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Average Forks per Repository: \",averageForks.toFixed(2)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Repository Activity Level: \",repositoryActivity]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{backgroundColor:'lightblue',borderRadius:'10px',padding:'5px'},children:\"\\u270D\\uFE0F Filtered User Repository Details\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:publicrepos.length>0&&/*#__PURE__*/_jsx(RepoList,{publicrepos:publicrepos})})})]})})});}","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","Container","Paper","Box","Button","TextField","Typography","Grid","fetchUserData","fetchPublicRepoData","UserInfo","RepoList","GraphQL","jsx","_jsx","jsxs","_jsxs","theme","palette","primary","main","secondary","GitHub","username","setUsername","user","setUser","publicrepos","setPublicrepos","userDataJSON","setUserDataJSON","combinedInfoJSON","setCombinedInfoJSON","timeOnGitHub","setTimeOnGitHub","activeLevel","setActiveLevel","userValue","setUserValue","mostUsedLanguage","setMostUsedLanguage","averageRepoSize","setAverageRepoSize","totalStars","setTotalStars","totalForks","setTotalForks","averageStars","setAverageStars","averageForks","setAverageForks","repositoryActivity","setRepositoryActivity","calculateTimeOnGitHub","createdAt","currentDate","Date","createdDate","timeDiff","getTime","daysOnGitHub","Math","floor","concat","calculateActiveLevel","updatedAt","updatedDate","daysSinceLastUpdate","calculateUserValue","followers","publicRepos","weightFollowers","weightPublicRepos","thresholdGood","category","value","calculateMostUsedLanguage","repos","languageCount","forEach","repo","language","Object","keys","reduce","a","b","calculateAverageRepoSize","length","totalSize","sum","size","calculateTotalStars","stargazers_count","calculateTotalForks","forks_count","calculateAverageStars","calculateAverageForks","calculateRepositoryActivity","lastPushedDates","map","pushed_at","mostRecentPush","max","apply","daysSinceLastPush","downloadJSON","json","filename","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GenerateAnalysis","trim","dataUser","JSON","stringify","filteredUser","login","html_url","name","company","location","bio","public_repos","following","created_at","updated_at","email","hireable","additionalInfo","combinedInfo","dataPublic","children","style","display","justifyContent","alignItems","minHeight","fontFamily","elevation","padding","marginTop","textAlign","mb","variant","component","gutterBottom","label","onChange","e","target","fullWidth","color","onClick","backgroundColor","container","spacing","marginBottom","item","disabled","borderRadius","xs","toFixed"],"sources":["/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/github.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { fetchUserData, fetchPublicRepoData } from '../functions/api';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport { User, PubRepo } from '../types';\nimport GraphQL from './graphql';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n\nexport default function GitHub() {\n  const [username, setUsername] = useState<string>('');\n  const [user, setUser] = useState<User | null>(null);\n  const [publicrepos, setPublicrepos] = useState<PubRepo[]>([]);\n  const [userDataJSON, setUserDataJSON] = useState<string>('');\n  const [combinedInfoJSON, setCombinedInfoJSON] = useState<string>('');\n  const [timeOnGitHub, setTimeOnGitHub] = useState<string>('');\n  const [activeLevel, setActiveLevel] = useState<string>('');\n  const [userValue, setUserValue] = useState<{ category: string, value: number } | null>(null);\n  const [mostUsedLanguage, setMostUsedLanguage] = useState<string>('');\n  const [averageRepoSize, setAverageRepoSize] = useState<number>(0);\n  const [totalStars, setTotalStars] = useState<number>(0);\n  const [totalForks, setTotalForks] = useState<number>(0);\n  const [averageStars, setAverageStars] = useState<number>(0);\n  const [averageForks, setAverageForks] = useState<number>(0);\n  const [repositoryActivity, setRepositoryActivity] = useState<string>('');\n\n  //1. user information manipulation and generation of insights:\n  const calculateTimeOnGitHub = (createdAt: string): string => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n\n  const calculateActiveLevel = (updatedAt: string): string => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n\n  const calculateUserValue= (followers: number, publicRepos: number): { category: string, value: number } => {\n    const weightFollowers = 0.6;\n    const weightPublicRepos = 0.4;\n    const userValue = (followers * weightFollowers) + (publicRepos * weightPublicRepos);\n    const thresholdGood = 100;\n\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n\n    return { category, value: userValue };\n  };\n\n  //2. user repo information manipulation and generation of insights\n  const calculateMostUsedLanguage = (repos: PubRepo[]): string => {\n    const languageCount: { [key: string]: number } = {};\n    repos.forEach((repo: PubRepo) => {\n      if (repo.language) {\n        if (languageCount[repo.language]) {\n          languageCount[repo.language]++;\n        } else {\n          languageCount[repo.language] = 1;\n        }\n      }\n    });\n    return Object.keys(languageCount).reduce((a, b) => languageCount[a] > languageCount[b] ? a : b, '');\n  };\n\n  const calculateAverageRepoSize = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    const totalSize = repos.reduce((sum, repo) => sum + repo.size, 0);\n    return totalSize / repos.length;\n  };\n\n  const calculateTotalStars = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);\n  };\n\n  const calculateTotalForks = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.forks_count, 0);\n  };\n\n  const calculateAverageStars = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalStars(repos) / repos.length;\n  };\n\n  const calculateAverageForks = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalForks(repos) / repos.length;\n  };\n\n  const calculateRepositoryActivity = (repos: PubRepo[]): string => {\n    const currentDate = new Date();\n    const lastPushedDates = repos.map(repo => new Date(repo.pushed_at).getTime()); // Extract timestamp\n    const mostRecentPush = new Date(Math.max.apply(null, lastPushedDates));\n    const daysSinceLastPush = Math.floor((currentDate.getTime() - mostRecentPush.getTime()) / (1000 * 3600 * 24));\n    \n    if (daysSinceLastPush <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastPush <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastPush <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  \n  //enable the download original json data function\n  const downloadJSON = (json: string, filename: string) => {\n        const blob = new Blob([json], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      };\n      \n  //the analysis function\n  const GenerateAnalysis = async () => {\n    if (username.trim() !== '') {\n      //set the user data\n      const dataUser = await fetchUserData(username);\n      if (dataUser) {\n        setUser(dataUser);\n        setUserDataJSON(JSON.stringify(dataUser, null, 2));\n\n        const filteredUser = {\n          login: dataUser.login,\n          html_url: dataUser.html_url,\n          name: dataUser.name,\n          company: dataUser.company,\n          location: dataUser.location,\n          bio: dataUser.bio,\n          public_repos: dataUser.public_repos,\n          followers: dataUser.followers,\n          following: dataUser.following,\n          created_at: dataUser.created_at,\n          updated_at: dataUser.updated_at,\n          email: dataUser.email,\n          hireable: dataUser.hireable\n        };\n\n        const additionalInfo = {\n          timeOnGitHub: calculateTimeOnGitHub(dataUser.created_at),\n          activeLevel: calculateActiveLevel(dataUser.updated_at),\n          userValue: calculateUserValue(dataUser.followers, dataUser.public_repos)\n        };\n\n        setTimeOnGitHub(additionalInfo.timeOnGitHub);\n        setActiveLevel(additionalInfo.activeLevel);\n        setUserValue(additionalInfo.userValue);\n\n        const combinedInfo = {\n          ...filteredUser,\n          ...additionalInfo\n        };\n\n        setCombinedInfoJSON(JSON.stringify(combinedInfo, null, 2));\n      }\n\n      //set the public repo data\n      const dataPublic = await fetchPublicRepoData(username);\n      if (dataPublic) {\n        setPublicrepos(dataPublic);\n\n        setMostUsedLanguage(calculateMostUsedLanguage(dataPublic));\n        setAverageRepoSize(calculateAverageRepoSize(dataPublic));\n        setTotalStars(calculateTotalStars(dataPublic));\n        setTotalForks(calculateTotalForks(dataPublic));\n        setAverageStars(calculateAverageStars(dataPublic));\n        setAverageForks(calculateAverageForks(dataPublic));\n        setRepositoryActivity(calculateRepositoryActivity(dataPublic));\n        \n      }\n    }\n  };\n\n  return (\n<ThemeProvider theme={theme}>\n  <Container style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', fontFamily: 'Arial' }}>\n    <Paper elevation={3} style={{ padding: '20px', marginTop: '20px', textAlign: 'center' }}>\n      <Box mb={3}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          GitHub User and Repo Analysis\n        </Typography>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          for Recruiters 🔍\n        </Typography>\n      </Box>\n      <Box mb={3}>\n        <TextField\n          label=\"GitHub Username\"\n          variant=\"outlined\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          fullWidth\n        />\n      </Box>\n      <Box mb={1}>\n        <Button variant=\"contained\" color=\"primary\" onClick={GenerateAnalysis} style={{ backgroundColor: 'lightblue' }}>\n          ✅ Generate Analysis\n        </Button>\n      </Box>\n      <Grid container spacing={2} justifyContent=\"center\" style={{ marginBottom: '16px' }}>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => downloadJSON(userDataJSON, `${username}_data.json`)}\n            disabled={!userDataJSON}\n            style={{ backgroundColor: 'lightblue' }}\n          >\n            ⬇️ Download Original User Data\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => downloadJSON(JSON.stringify(publicrepos, null, 2), `${username}_repos.json`)}\n            disabled={publicrepos.length === 0}\n            style={{ backgroundColor: 'lightblue' }}\n          >\n            ⬇️ Download Original Repository Data\n          </Button>\n        </Grid>\n      </Grid>\n      <GraphQL/>\n      <br/>\n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>👩🏻‍💻 User Analysis</Typography>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={12}>\n          {user && (\n            <UserInfo user={user} timeOnGitHub={timeOnGitHub} activeLevel={activeLevel} userValue={userValue} mostUsedLanguage={mostUsedLanguage} />\n          )}\n        </Grid>\n      </Grid>\n      <br/>\n      <br/>\n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>👨🏼‍💻 Repository Analysis</Typography>\n      {mostUsedLanguage && (\n        <Grid container spacing={3} justifyContent=\"center\">\n          <Grid item xs={12}>\n            <br/>\n            <Typography variant=\"body1\">Most Frequently Used Programming Language: {mostUsedLanguage}</Typography>\n            <Typography variant=\"body1\">Average Repository Size: {averageRepoSize} KB</Typography>\n            <Typography variant=\"body1\">Total Stars: {totalStars}</Typography>\n            <Typography variant=\"body1\">Total Forks: {totalForks}</Typography>\n            <Typography variant=\"body1\">Average Stars per Repository: {averageStars.toFixed(2)}</Typography>\n            <Typography variant=\"body1\">Average Forks per Repository: {averageForks.toFixed(2)}</Typography>\n            <Typography variant=\"body1\">Repository Activity Level: {repositoryActivity}</Typography>\n          </Grid>\n        </Grid>\n      )}\n\n      <br/>\n      <br/>\n      \n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>✍️ Filtered User Repository Details</Typography>\n      \n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={12}>\n          {publicrepos.length > 0 && (\n            <RepoList publicrepos={publicrepos} />\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  </Container>\n</ThemeProvider>  \n  );\n}  \n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,CAAEC,WAAW,KAAQ,sBAAsB,CACjE,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,KAAK,KAAM,qBAAqB,CACvC,MAAO,CAAAC,GAAG,KAAM,mBAAmB,CACnC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,OAASC,aAAa,CAAEC,mBAAmB,KAAQ,kBAAkB,CACrE,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAEjC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,KAAK,CAAGjB,WAAW,CAAC,CACxBkB,OAAO,CAAE,CACPC,OAAO,CAAE,CACPC,IAAI,CAAE,SACR,CAAC,CACDC,SAAS,CAAE,CACTD,IAAI,CAAE,SACR,CACF,CACF,CAAC,CAAC,CAEF,cAAe,SAAS,CAAAE,MAAMA,CAAA,CAAG,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAG1B,QAAQ,CAAS,EAAE,CAAC,CACpD,KAAM,CAAC2B,IAAI,CAAEC,OAAO,CAAC,CAAG5B,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAAC6B,WAAW,CAAEC,cAAc,CAAC,CAAG9B,QAAQ,CAAY,EAAE,CAAC,CAC7D,KAAM,CAAC+B,YAAY,CAAEC,eAAe,CAAC,CAAGhC,QAAQ,CAAS,EAAE,CAAC,CAC5D,KAAM,CAACiC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlC,QAAQ,CAAS,EAAE,CAAC,CACpE,KAAM,CAACmC,YAAY,CAAEC,eAAe,CAAC,CAAGpC,QAAQ,CAAS,EAAE,CAAC,CAC5D,KAAM,CAACqC,WAAW,CAAEC,cAAc,CAAC,CAAGtC,QAAQ,CAAS,EAAE,CAAC,CAC1D,KAAM,CAACuC,SAAS,CAAEC,YAAY,CAAC,CAAGxC,QAAQ,CAA6C,IAAI,CAAC,CAC5F,KAAM,CAACyC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1C,QAAQ,CAAS,EAAE,CAAC,CACpE,KAAM,CAAC2C,eAAe,CAAEC,kBAAkB,CAAC,CAAG5C,QAAQ,CAAS,CAAC,CAAC,CACjE,KAAM,CAAC6C,UAAU,CAAEC,aAAa,CAAC,CAAG9C,QAAQ,CAAS,CAAC,CAAC,CACvD,KAAM,CAAC+C,UAAU,CAAEC,aAAa,CAAC,CAAGhD,QAAQ,CAAS,CAAC,CAAC,CACvD,KAAM,CAACiD,YAAY,CAAEC,eAAe,CAAC,CAAGlD,QAAQ,CAAS,CAAC,CAAC,CAC3D,KAAM,CAACmD,YAAY,CAAEC,eAAe,CAAC,CAAGpD,QAAQ,CAAS,CAAC,CAAC,CAC3D,KAAM,CAACqD,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGtD,QAAQ,CAAS,EAAE,CAAC,CAExE;AACA,KAAM,CAAAuD,qBAAqB,CAAIC,SAAiB,EAAa,CAC3D,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAC9B,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAD,IAAI,CAACF,SAAS,CAAC,CACvC,KAAM,CAAAI,QAAQ,CAAGH,WAAW,CAACI,OAAO,CAAC,CAAC,CAAGF,WAAW,CAACE,OAAO,CAAC,CAAC,CAC9D,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,EAAI,IAAI,CAAG,IAAI,CAAG,EAAE,CAAC,CAAC,CAC9D,SAAAK,MAAA,CAAUH,YAAY,UACxB,CAAC,CAED,KAAM,CAAAI,oBAAoB,CAAIC,SAAiB,EAAa,CAC1D,KAAM,CAAAV,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAC9B,KAAM,CAAAU,WAAW,CAAG,GAAI,CAAAV,IAAI,CAACS,SAAS,CAAC,CACvC,KAAM,CAAAP,QAAQ,CAAGH,WAAW,CAACI,OAAO,CAAC,CAAC,CAAGO,WAAW,CAACP,OAAO,CAAC,CAAC,CAC9D,KAAM,CAAAQ,mBAAmB,CAAGN,IAAI,CAACC,KAAK,CAACJ,QAAQ,EAAI,IAAI,CAAG,IAAI,CAAG,EAAE,CAAC,CAAC,CAErE,GAAIS,mBAAmB,EAAI,EAAE,CAAE,CAC7B,MAAO,aAAa,CACtB,CAAC,IAAM,IAAIA,mBAAmB,EAAI,EAAE,CAAE,CACpC,MAAO,mBAAmB,CAC5B,CAAC,IAAM,IAAIA,mBAAmB,EAAI,GAAG,CAAE,CACrC,MAAO,iBAAiB,CAC1B,CAAC,IAAM,CACL,MAAO,YAAY,CACrB,CACF,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAEA,CAACC,SAAiB,CAAEC,WAAmB,GAA0C,CACzG,KAAM,CAAAC,eAAe,CAAG,GAAG,CAC3B,KAAM,CAAAC,iBAAiB,CAAG,GAAG,CAC7B,KAAM,CAAAnC,SAAS,CAAIgC,SAAS,CAAGE,eAAe,CAAKD,WAAW,CAAGE,iBAAkB,CACnF,KAAM,CAAAC,aAAa,CAAG,GAAG,CAEzB,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAIrC,SAAS,CAAGoC,aAAa,CAAE,CAC7BC,QAAQ,CAAG,4BAA4B,CACzC,CAAC,IAAM,IAAIrC,SAAS,CAAG,CAAC,CAAGoC,aAAa,CAAE,CACxCC,QAAQ,CAAG,iBAAiB,CAC9B,CAAC,IAAM,CACLA,QAAQ,CAAG,kBAAkB,CAC/B,CAEA,MAAO,CAAEA,QAAQ,CAAEC,KAAK,CAAEtC,SAAU,CAAC,CACvC,CAAC,CAED;AACA,KAAM,CAAAuC,yBAAyB,CAAIC,KAAgB,EAAa,CAC9D,KAAM,CAAAC,aAAwC,CAAG,CAAC,CAAC,CACnDD,KAAK,CAACE,OAAO,CAAEC,IAAa,EAAK,CAC/B,GAAIA,IAAI,CAACC,QAAQ,CAAE,CACjB,GAAIH,aAAa,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAE,CAChCH,aAAa,CAACE,IAAI,CAACC,QAAQ,CAAC,EAAE,CAChC,CAAC,IAAM,CACLH,aAAa,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAG,CAAC,CAClC,CACF,CACF,CAAC,CAAC,CACF,MAAO,CAAAC,MAAM,CAACC,IAAI,CAACL,aAAa,CAAC,CAACM,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKR,aAAa,CAACO,CAAC,CAAC,CAAGP,aAAa,CAACQ,CAAC,CAAC,CAAGD,CAAC,CAAGC,CAAC,CAAE,EAAE,CAAC,CACrG,CAAC,CAED,KAAM,CAAAC,wBAAwB,CAAIV,KAAgB,EAAa,CAC7D,GAAIA,KAAK,CAACW,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAChC,KAAM,CAAAC,SAAS,CAAGZ,KAAK,CAACO,MAAM,CAAC,CAACM,GAAG,CAAEV,IAAI,GAAKU,GAAG,CAAGV,IAAI,CAACW,IAAI,CAAE,CAAC,CAAC,CACjE,MAAO,CAAAF,SAAS,CAAGZ,KAAK,CAACW,MAAM,CACjC,CAAC,CAED,KAAM,CAAAI,mBAAmB,CAAIf,KAAgB,EAAa,CACxD,MAAO,CAAAA,KAAK,CAACO,MAAM,CAAC,CAACM,GAAG,CAAEV,IAAI,GAAKU,GAAG,CAAGV,IAAI,CAACa,gBAAgB,CAAE,CAAC,CAAC,CACpE,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAIjB,KAAgB,EAAa,CACxD,MAAO,CAAAA,KAAK,CAACO,MAAM,CAAC,CAACM,GAAG,CAAEV,IAAI,GAAKU,GAAG,CAAGV,IAAI,CAACe,WAAW,CAAE,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAInB,KAAgB,EAAa,CAC1D,GAAIA,KAAK,CAACW,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAChC,MAAO,CAAAI,mBAAmB,CAACf,KAAK,CAAC,CAAGA,KAAK,CAACW,MAAM,CAClD,CAAC,CAED,KAAM,CAAAS,qBAAqB,CAAIpB,KAAgB,EAAa,CAC1D,GAAIA,KAAK,CAACW,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAChC,MAAO,CAAAM,mBAAmB,CAACjB,KAAK,CAAC,CAAGA,KAAK,CAACW,MAAM,CAClD,CAAC,CAED,KAAM,CAAAU,2BAA2B,CAAIrB,KAAgB,EAAa,CAChE,KAAM,CAAAtB,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAC9B,KAAM,CAAA2C,eAAe,CAAGtB,KAAK,CAACuB,GAAG,CAACpB,IAAI,EAAI,GAAI,CAAAxB,IAAI,CAACwB,IAAI,CAACqB,SAAS,CAAC,CAAC1C,OAAO,CAAC,CAAC,CAAC,CAAE;AAC/E,KAAM,CAAA2C,cAAc,CAAG,GAAI,CAAA9C,IAAI,CAACK,IAAI,CAAC0C,GAAG,CAACC,KAAK,CAAC,IAAI,CAAEL,eAAe,CAAC,CAAC,CACtE,KAAM,CAAAM,iBAAiB,CAAG5C,IAAI,CAACC,KAAK,CAAC,CAACP,WAAW,CAACI,OAAO,CAAC,CAAC,CAAG2C,cAAc,CAAC3C,OAAO,CAAC,CAAC,GAAK,IAAI,CAAG,IAAI,CAAG,EAAE,CAAC,CAAC,CAE7G,GAAI8C,iBAAiB,EAAI,EAAE,CAAE,CAC3B,MAAO,aAAa,CACtB,CAAC,IAAM,IAAIA,iBAAiB,EAAI,EAAE,CAAE,CAClC,MAAO,mBAAmB,CAC5B,CAAC,IAAM,IAAIA,iBAAiB,EAAI,GAAG,CAAE,CACnC,MAAO,iBAAiB,CAC1B,CAAC,IAAM,CACL,MAAO,YAAY,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAACC,IAAY,CAAEC,QAAgB,GAAK,CACnD,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACH,IAAI,CAAC,CAAE,CAAEI,IAAI,CAAE,kBAAmB,CAAC,CAAC,CAC3D,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CACrC,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,CAAGX,QAAQ,CACxBQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC,CAC/BF,GAAG,CAACW,eAAe,CAACZ,GAAG,CAAC,CAC1B,CAAC,CAEL;AACA,KAAM,CAAAa,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAItG,QAAQ,CAACuG,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC1B;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAvH,aAAa,CAACe,QAAQ,CAAC,CAC9C,GAAIwG,QAAQ,CAAE,CACZrG,OAAO,CAACqG,QAAQ,CAAC,CACjBjG,eAAe,CAACkG,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAElD,KAAM,CAAAG,YAAY,CAAG,CACnBC,KAAK,CAAEJ,QAAQ,CAACI,KAAK,CACrBC,QAAQ,CAAEL,QAAQ,CAACK,QAAQ,CAC3BC,IAAI,CAAEN,QAAQ,CAACM,IAAI,CACnBC,OAAO,CAAEP,QAAQ,CAACO,OAAO,CACzBC,QAAQ,CAAER,QAAQ,CAACQ,QAAQ,CAC3BC,GAAG,CAAET,QAAQ,CAACS,GAAG,CACjBC,YAAY,CAAEV,QAAQ,CAACU,YAAY,CACnCpE,SAAS,CAAE0D,QAAQ,CAAC1D,SAAS,CAC7BqE,SAAS,CAAEX,QAAQ,CAACW,SAAS,CAC7BC,UAAU,CAAEZ,QAAQ,CAACY,UAAU,CAC/BC,UAAU,CAAEb,QAAQ,CAACa,UAAU,CAC/BC,KAAK,CAAEd,QAAQ,CAACc,KAAK,CACrBC,QAAQ,CAAEf,QAAQ,CAACe,QACrB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,CACrB9G,YAAY,CAAEoB,qBAAqB,CAAC0E,QAAQ,CAACY,UAAU,CAAC,CACxDxG,WAAW,CAAE6B,oBAAoB,CAAC+D,QAAQ,CAACa,UAAU,CAAC,CACtDvG,SAAS,CAAE+B,kBAAkB,CAAC2D,QAAQ,CAAC1D,SAAS,CAAE0D,QAAQ,CAACU,YAAY,CACzE,CAAC,CAEDvG,eAAe,CAAC6G,cAAc,CAAC9G,YAAY,CAAC,CAC5CG,cAAc,CAAC2G,cAAc,CAAC5G,WAAW,CAAC,CAC1CG,YAAY,CAACyG,cAAc,CAAC1G,SAAS,CAAC,CAEtC,KAAM,CAAA2G,YAAY,CAAG,CACnB,GAAGd,YAAY,CACf,GAAGa,cACL,CAAC,CAED/G,mBAAmB,CAACgG,IAAI,CAACC,SAAS,CAACe,YAAY,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAC5D,CAEA;AACA,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAAxI,mBAAmB,CAACc,QAAQ,CAAC,CACtD,GAAI0H,UAAU,CAAE,CACdrH,cAAc,CAACqH,UAAU,CAAC,CAE1BzG,mBAAmB,CAACoC,yBAAyB,CAACqE,UAAU,CAAC,CAAC,CAC1DvG,kBAAkB,CAAC6C,wBAAwB,CAAC0D,UAAU,CAAC,CAAC,CACxDrG,aAAa,CAACgD,mBAAmB,CAACqD,UAAU,CAAC,CAAC,CAC9CnG,aAAa,CAACgD,mBAAmB,CAACmD,UAAU,CAAC,CAAC,CAC9CjG,eAAe,CAACgD,qBAAqB,CAACiD,UAAU,CAAC,CAAC,CAClD/F,eAAe,CAAC+C,qBAAqB,CAACgD,UAAU,CAAC,CAAC,CAClD7F,qBAAqB,CAAC8C,2BAA2B,CAAC+C,UAAU,CAAC,CAAC,CAEhE,CACF,CACF,CAAC,CAED,mBACFnI,IAAA,CAACf,aAAa,EAACkB,KAAK,CAAEA,KAAM,CAAAiI,QAAA,cAC1BpI,IAAA,CAACb,SAAS,EAACkJ,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,SAAS,CAAE,OAAO,CAAEC,UAAU,CAAE,OAAQ,CAAE,CAAAN,QAAA,cAC7HlI,KAAA,CAACd,KAAK,EAACuJ,SAAS,CAAE,CAAE,CAACN,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAM,CAAEC,SAAS,CAAE,MAAM,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAV,QAAA,eACtFlI,KAAA,CAACb,GAAG,EAAC0J,EAAE,CAAE,CAAE,CAAAX,QAAA,eACTpI,IAAA,CAACR,UAAU,EAACwJ,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,MAAAd,QAAA,CAAC,+BAErD,CAAY,CAAC,cACbpI,IAAA,CAACR,UAAU,EAACwJ,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,MAAAd,QAAA,CAAC,6BAErD,CAAY,CAAC,EACV,CAAC,cACNpI,IAAA,CAACX,GAAG,EAAC0J,EAAE,CAAE,CAAE,CAAAX,QAAA,cACTpI,IAAA,CAACT,SAAS,EACR4J,KAAK,CAAC,iBAAiB,CACvBH,OAAO,CAAC,UAAU,CAClBnF,KAAK,CAAEpD,QAAS,CAChB2I,QAAQ,CAAGC,CAAC,EAAK3I,WAAW,CAAC2I,CAAC,CAACC,MAAM,CAACzF,KAAK,CAAE,CAC7C0F,SAAS,MACV,CAAC,CACC,CAAC,cACNvJ,IAAA,CAACX,GAAG,EAAC0J,EAAE,CAAE,CAAE,CAAAX,QAAA,cACTpI,IAAA,CAACV,MAAM,EAAC0J,OAAO,CAAC,WAAW,CAACQ,KAAK,CAAC,SAAS,CAACC,OAAO,CAAE1C,gBAAiB,CAACsB,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAY,CAAE,CAAAtB,QAAA,CAAC,0BAEhH,CAAQ,CAAC,CACN,CAAC,cACNlI,KAAA,CAACT,IAAI,EAACkK,SAAS,MAACC,OAAO,CAAE,CAAE,CAACrB,cAAc,CAAC,QAAQ,CAACF,KAAK,CAAE,CAAEwB,YAAY,CAAE,MAAO,CAAE,CAAAzB,QAAA,eAClFpI,IAAA,CAACP,IAAI,EAACqK,IAAI,MAAA1B,QAAA,cACRpI,IAAA,CAACV,MAAM,EACL0J,OAAO,CAAC,WAAW,CACnBQ,KAAK,CAAC,SAAS,CACfC,OAAO,CAAEA,CAAA,GAAM7D,YAAY,CAAC7E,YAAY,IAAAkC,MAAA,CAAKxC,QAAQ,cAAY,CAAE,CACnEsJ,QAAQ,CAAE,CAAChJ,YAAa,CACxBsH,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAY,CAAE,CAAAtB,QAAA,CACzC,0CAED,CAAQ,CAAC,CACL,CAAC,cACPpI,IAAA,CAACP,IAAI,EAACqK,IAAI,MAAA1B,QAAA,cACRpI,IAAA,CAACV,MAAM,EACL0J,OAAO,CAAC,WAAW,CACnBQ,KAAK,CAAC,WAAW,CACjBC,OAAO,CAAEA,CAAA,GAAM7D,YAAY,CAACsB,IAAI,CAACC,SAAS,CAACtG,WAAW,CAAE,IAAI,CAAE,CAAC,CAAC,IAAAoC,MAAA,CAAKxC,QAAQ,eAAa,CAAE,CAC5FsJ,QAAQ,CAAElJ,WAAW,CAAC6D,MAAM,GAAK,CAAE,CACnC2D,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAY,CAAE,CAAAtB,QAAA,CACzC,gDAED,CAAQ,CAAC,CACL,CAAC,EACH,CAAC,cACPpI,IAAA,CAACF,OAAO,GAAC,CAAC,cACVE,IAAA,QAAI,CAAC,cACLA,IAAA,CAACR,UAAU,EAACwJ,OAAO,CAAC,IAAI,CAACX,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAW,CAAEM,YAAY,CAAE,MAAM,CAAEpB,OAAO,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAC,0DAAqB,CAAY,CAAC,cAC1IpI,IAAA,CAACP,IAAI,EAACkK,SAAS,MAACC,OAAO,CAAE,CAAE,CAACrB,cAAc,CAAC,QAAQ,CAAAH,QAAA,cACjDpI,IAAA,CAACP,IAAI,EAACqK,IAAI,MAACG,EAAE,CAAE,EAAG,CAAA7B,QAAA,CACfzH,IAAI,eACHX,IAAA,CAACJ,QAAQ,EAACe,IAAI,CAAEA,IAAK,CAACQ,YAAY,CAAEA,YAAa,CAACE,WAAW,CAAEA,WAAY,CAACE,SAAS,CAAEA,SAAU,CAACE,gBAAgB,CAAEA,gBAAiB,CAAE,CACxI,CACG,CAAC,CACH,CAAC,cACPzB,IAAA,QAAI,CAAC,cACLA,IAAA,QAAI,CAAC,cACLA,IAAA,CAACR,UAAU,EAACwJ,OAAO,CAAC,IAAI,CAACX,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAW,CAAEM,YAAY,CAAE,MAAM,CAAEpB,OAAO,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAC,gEAA2B,CAAY,CAAC,CAC/I3G,gBAAgB,eACfzB,IAAA,CAACP,IAAI,EAACkK,SAAS,MAACC,OAAO,CAAE,CAAE,CAACrB,cAAc,CAAC,QAAQ,CAAAH,QAAA,cACjDlI,KAAA,CAACT,IAAI,EAACqK,IAAI,MAACG,EAAE,CAAE,EAAG,CAAA7B,QAAA,eAChBpI,IAAA,QAAI,CAAC,cACLE,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,6CAA2C,CAAC3G,gBAAgB,EAAa,CAAC,cACtGvB,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,2BAAyB,CAACzG,eAAe,CAAC,KAAG,EAAY,CAAC,cACtFzB,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,eAAa,CAACvG,UAAU,EAAa,CAAC,cAClE3B,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,eAAa,CAACrG,UAAU,EAAa,CAAC,cAClE7B,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,gCAA8B,CAACnG,YAAY,CAACiI,OAAO,CAAC,CAAC,CAAC,EAAa,CAAC,cAChGhK,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,gCAA8B,CAACjG,YAAY,CAAC+H,OAAO,CAAC,CAAC,CAAC,EAAa,CAAC,cAChGhK,KAAA,CAACV,UAAU,EAACwJ,OAAO,CAAC,OAAO,CAAAZ,QAAA,EAAC,6BAA2B,CAAC/F,kBAAkB,EAAa,CAAC,EACpF,CAAC,CACH,CACP,cAEDrC,IAAA,QAAI,CAAC,cACLA,IAAA,QAAI,CAAC,cAELA,IAAA,CAACR,UAAU,EAACwJ,OAAO,CAAC,IAAI,CAACX,KAAK,CAAE,CAAEqB,eAAe,CAAE,WAAW,CAAEM,YAAY,CAAE,MAAM,CAAEpB,OAAO,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAC,+CAAmC,CAAY,CAAC,cAExJpI,IAAA,CAACP,IAAI,EAACkK,SAAS,MAACC,OAAO,CAAE,CAAE,CAACrB,cAAc,CAAC,QAAQ,CAAAH,QAAA,cACjDpI,IAAA,CAACP,IAAI,EAACqK,IAAI,MAACG,EAAE,CAAE,EAAG,CAAA7B,QAAA,CACfvH,WAAW,CAAC6D,MAAM,CAAG,CAAC,eACrB1E,IAAA,CAACH,QAAQ,EAACgB,WAAW,CAAEA,WAAY,CAAE,CACtC,CACG,CAAC,CACH,CAAC,EACF,CAAC,CACC,CAAC,CACC,CAAC,CAEhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}