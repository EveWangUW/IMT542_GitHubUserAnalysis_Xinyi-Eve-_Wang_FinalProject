{"ast":null,"code":"var _jsxFileName = \"/Users/evewang/Desktop/Internship_prep/EviePortfolio/client/src/components/github.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Github() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [repos, setRepos] = useState([]);\n  const [user, setUsers] = useState([]);\n  const fetchRepoData = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/${username}/repos`);\n      const data = await response.json();\n      setRepos(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const fetchUserData = async () => {\n    try {\n      const responseUser = await fetch(`https://api.github.com/users/${username}`);\n      const dataUser = await responseUser.json();\n      setUsers(dataUser);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleButtonClick = () => {\n    if (username.trim() !== '') {\n      fetchRepoData();\n      fetchUserData();\n    } else {\n      alert('Please enter a GitHub username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter GitHub Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleButtonClick,\n      children: \"Fetch Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GitHub Repositories for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repos.slice(0, 15).map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", repo.description || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Main Language: \", repo.language || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forks: \", repo.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stars: \", repo.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", repo.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Updated At: \", repo.updated_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, repo.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Github, \"A5K19+4IPhUaHs7EKWUVYG2NhNk=\");\n_c = Github;\n;\nvar _c;\n$RefreshReg$(_c, \"Github\");","map":{"version":3,"names":["React","useState","Button","TextField","jsxDEV","_jsxDEV","Github","_s","username","setUsername","repos","setRepos","user","setUsers","fetchRepoData","response","fetch","data","json","error","console","fetchUserData","responseUser","dataUser","handleButtonClick","trim","alert","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","name","slice","map","repo","description","language","forks_count","stargazers_count","created_at","updated_at","_c","$RefreshReg$"],"sources":["/Users/evewang/Desktop/Internship_prep/EviePortfolio/client/src/components/github.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\ntype Repo = {\n  name: string;\n  description: string | null;\n  language: string | null;\n  forks_count: number;\n  stargazers_count: number;\n  created_at: string;\n  updated_at: string;\n};\n\ntype User = {\n  login:string;\n  html_url:string;\n  name:string | null;\n  company:string | null;\n  location:string | null;\n  bio:string | null;\n  public_repos:number;\n  followers:number;\n  following:number;\n  created_at:string;\n  updated_at:string;\n}\n\nexport default function Github() {\n  const [username, setUsername] = useState<string>('');\n  const [repos, setRepos] = useState<Repo[]>([]);\n  const [user,setUsers] = useState<User[]>([]);\n\n  const fetchRepoData = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/${username}/repos`);\n      const data = await response.json();\n      setRepos(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const fetchUserData = async () => {\n    try{\n      const responseUser=await fetch (`https://api.github.com/users/${username}`);\n      const dataUser=await responseUser.json();\n      setUsers(dataUser);\n    }catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (username.trim() !== '') {\n      fetchRepoData();\n      fetchUserData();\n    } else {\n      alert('Please enter a GitHub username.');\n    }\n  };\n\n  return (\n    \n    <div>\n      <TextField\n        label=\"Enter GitHub Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button variant=\"contained\" onClick={handleButtonClick}>\n        Fetch Repositories\n      </Button>\n      <h1>GitHub Repositories for {username}</h1>\n      <ul>\n        <li>{user.name}</li>\n      </ul>\n      <ul>\n        {repos.slice(0, 15).map((repo) => (\n          <li key={repo.name}>\n            <h3>{repo.name}</h3>\n            <p>Description: {repo.description || 'N/A'}</p>\n            <p>Main Language: {repo.language || 'N/A'}</p>\n            <p>Forks: {repo.forks_count}</p>\n            <p>Stars: {repo.stargazers_count}</p>\n            <p>Created At: {repo.created_at}</p>\n            <p>Last Updated At: {repo.updated_at}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}