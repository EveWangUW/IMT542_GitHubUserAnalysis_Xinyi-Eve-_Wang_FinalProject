{"ast":null,"code":"import React,{useState}from'react';import Button from'@mui/material/Button';// The GraphQL query\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const query=\"\\nquery GetUser($login: String!) {\\n  user(login: $login) {\\n    name\\n    email\\n    bio\\n    createdAt\\n    updatedAt\\n    repositories(first: 5) {\\n      nodes {\\n        name\\n        description\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n}\";// The endpoint URL\nconst url='https://api.github.com/graphql';const GraphQL=()=>{const[login,setLogin]=useState('');const handleChange=event=>{setLogin(event.target.value);};const fetchRepositories=()=>{// The headers for the request\nconst headers={'Authorization':\"Bearer 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\",'Content-Type':'application/json'};// The request payload\nconst payload={query:query,variables:{login:login}};// Make the POST request\nfetch(url,{method:'POST',headers:headers,body:JSON.stringify(payload)}).then(response=>response.json()).then(data=>{console.log(data);// Trigger the download\ndownloadJSON(data,'repositories_data.json');}).catch(error=>{console.error('Error:',error);});};const downloadJSON=(json,filename)=>{const blob=new Blob([JSON.stringify(json,null,2)],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2B07\\uFE0F Download user and repo information via GraphQL endpoint\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:login,onChange:handleChange,placeholder:\"Enter GitHub username\",style:{marginBottom:'10px',padding:'9px'}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:fetchRepositories,disabled:!login,style:{backgroundColor:'lightblue',marginLeft:'10px'},children:\"Download\"})]});};export default GraphQL;","map":{"version":3,"names":["React","useState","Button","jsx","_jsx","jsxs","_jsxs","query","url","GraphQL","login","setLogin","handleChange","event","target","value","fetchRepositories","headers","payload","variables","fetch","method","body","JSON","stringify","then","response","json","data","console","log","downloadJSON","catch","error","filename","blob","Blob","type","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","children","onChange","placeholder","style","marginBottom","padding","variant","color","onClick","disabled","backgroundColor","marginLeft"],"sources":["/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/graphql.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\n\n// The GraphQL query\nconst query = `\nquery GetUser($login: String!) {\n  user(login: $login) {\n    name\n    email\n    bio\n    createdAt\n    updatedAt\n    repositories(first: 5) {\n      nodes {\n        name\n        description\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}`;\n\n// The endpoint URL\nconst url = 'https://api.github.com/graphql';\n\nconst GraphQL: React.FC = () => {\n  const [login, setLogin] = useState('');\n  \n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value);\n  };\n\n  const fetchRepositories = () => {\n    // The headers for the request\n    const headers = {\n      'Authorization': `Bearer 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`,\n      'Content-Type': 'application/json'\n    };\n\n    // The request payload\n    const payload = {\n      query: query,\n      variables: { login: login }\n    };\n\n    // Make the POST request\n    fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(payload)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        // Trigger the download\n        downloadJSON(data, 'repositories_data.json');\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const downloadJSON = (json: object, filename: string) => {\n    const blob = new Blob([JSON.stringify(json, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div>\n    <h4>⬇️ Download user and repo information via GraphQL endpoint</h4>\n      <input \n        type=\"text\" \n        value={login} \n        onChange={handleChange} \n        placeholder=\"Enter GitHub username\" \n        style={{ marginBottom: '10px', padding: '9px' }} \n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={fetchRepositories}\n        disabled={!login}\n        style={{ backgroundColor: 'lightblue', marginLeft: '10px' }}\n      >\n        Download\n      </Button>\n  </div>\n);\n};\n\nexport default GraphQL;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}