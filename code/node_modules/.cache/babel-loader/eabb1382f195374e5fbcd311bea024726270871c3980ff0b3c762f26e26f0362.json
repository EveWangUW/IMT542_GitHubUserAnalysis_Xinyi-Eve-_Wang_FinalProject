{"ast":null,"code":"var _jsxFileName = \"/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/github.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { fetchUserData, fetchPublicRepoData } from '../functions/api';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  }\n});\nexport default function GitHub() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n  const [publicrepos, setPublicrepos] = useState([]);\n  const [userDataJSON, setUserDataJSON] = useState('');\n  const [combinedInfoJSON, setCombinedInfoJSON] = useState('');\n  const [timeOnGitHub, setTimeOnGitHub] = useState('');\n  const [activeLevel, setActiveLevel] = useState('');\n  const [userValueToGitHub, setUserValueToGitHub] = useState(null);\n  const [mostUsedLanguage, setMostUsedLanguage] = useState('');\n  const [averageRepoSize, setAverageRepoSize] = useState(0);\n  const [totalStars, setTotalStars] = useState(0);\n  const [totalForks, setTotalForks] = useState(0);\n  const [averageStars, setAverageStars] = useState(0);\n  const [averageForks, setAverageForks] = useState(0);\n  const [repositoryActivity, setRepositoryActivity] = useState('');\n  const calculateTimeOnGitHub = createdAt => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n  const calculateActiveLevel = updatedAt => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  const calculateUserValueToGitHub = (followers, publicRepos) => {\n    const weightFollowers = 0.6;\n    const weightPublicRepos = 0.4;\n    const userValue = followers * weightFollowers + publicRepos * weightPublicRepos;\n    const thresholdGood = 100;\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n    return {\n      category,\n      value: userValue\n    };\n  };\n  const calculateAverageRepoSize = repos => {\n    if (repos.length === 0) return 0;\n    const totalSize = repos.reduce((sum, repo) => sum + repo.size, 0);\n    return totalSize / repos.length;\n  };\n  const calculateTotalStars = repos => {\n    return repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);\n  };\n  const calculateTotalForks = repos => {\n    return repos.reduce((sum, repo) => sum + repo.forks_count, 0);\n  };\n  const calculateAverageStars = repos => {\n    if (repos.length === 0) return 0;\n    return calculateTotalStars(repos) / repos.length;\n  };\n  const calculateAverageForks = repos => {\n    if (repos.length === 0) return 0;\n    return calculateTotalForks(repos) / repos.length;\n  };\n  const calculateRepositoryActivity = repos => {\n    const currentDate = new Date();\n    const lastPushedDates = repos.map(repo => new Date(repo.pushed_at).getTime()); // Extract timestamp\n    const mostRecentPush = new Date(Math.max.apply(null, lastPushedDates));\n    const daysSinceLastPush = Math.floor((currentDate.getTime() - mostRecentPush.getTime()) / (1000 * 3600 * 24));\n    if (daysSinceLastPush <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastPush <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastPush <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  const downloadJSON = (json, filename) => {\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const GenerateAnalysis = async () => {\n    if (username.trim() !== '') {\n      const dataUser = await fetchUserData(username);\n      if (dataUser) {\n        setUser(dataUser);\n        setUserDataJSON(JSON.stringify(dataUser, null, 2));\n        const filteredUser = {\n          login: dataUser.login,\n          html_url: dataUser.html_url,\n          name: dataUser.name,\n          company: dataUser.company,\n          location: dataUser.location,\n          bio: dataUser.bio,\n          public_repos: dataUser.public_repos,\n          followers: dataUser.followers,\n          following: dataUser.following,\n          created_at: dataUser.created_at,\n          updated_at: dataUser.updated_at,\n          email: dataUser.email,\n          hireable: dataUser.hireable\n        };\n        const additionalInfo = {\n          timeOnGitHub: calculateTimeOnGitHub(dataUser.created_at),\n          activeLevel: calculateActiveLevel(dataUser.updated_at),\n          userValueToGitHub: calculateUserValueToGitHub(dataUser.followers, dataUser.public_repos)\n        };\n        setTimeOnGitHub(additionalInfo.timeOnGitHub);\n        setActiveLevel(additionalInfo.activeLevel);\n        setUserValueToGitHub(additionalInfo.userValueToGitHub);\n        const combinedInfo = {\n          ...filteredUser,\n          ...additionalInfo\n        };\n        setCombinedInfoJSON(JSON.stringify(combinedInfo, null, 2));\n      }\n      const dataPublic = await fetchPublicRepoData(username);\n      if (dataPublic) {\n        setPublicrepos(dataPublic);\n        const languageCount = {};\n        dataPublic.forEach(repo => {\n          if (repo.language) {\n            if (languageCount[repo.language]) {\n              languageCount[repo.language]++;\n            } else {\n              languageCount[repo.language] = 1;\n            }\n          }\n        });\n        const mostUsedLanguage = Object.keys(languageCount).reduce((a, b) => languageCount[a] > languageCount[b] ? a : b, '');\n        setMostUsedLanguage(mostUsedLanguage);\n        setAverageRepoSize(calculateAverageRepoSize(dataPublic));\n        setTotalStars(calculateTotalStars(dataPublic));\n        setTotalForks(calculateTotalForks(dataPublic));\n        setAverageStars(calculateAverageStars(dataPublic));\n        setAverageForks(calculateAverageForks(dataPublic));\n        setRepositoryActivity(calculateRepositoryActivity(dataPublic));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"GitHub User and Repo Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"GitHub Username\",\n            variant: \"outlined\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: GenerateAnalysis,\n            children: \"Generate Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"center\",\n          style: {\n            marginBottom: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => downloadJSON(userDataJSON, `${username}_data.json`),\n              disabled: !userDataJSON,\n              children: \"Download User Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => downloadJSON(JSON.stringify(publicrepos, null, 2), `${username}_repos.json`),\n              disabled: publicrepos.length === 0,\n              children: \"Download Repositories Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: user && /*#__PURE__*/_jsxDEV(UserInfo, {\n              user: user,\n              timeOnGitHub: timeOnGitHub,\n              activeLevel: activeLevel,\n              userValueToGitHub: userValueToGitHub,\n              mostUsedLanguage: mostUsedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: publicrepos.length > 0 && /*#__PURE__*/_jsxDEV(RepoList, {\n              publicrepos: publicrepos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Analysis Metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Repository Size: \", averageRepoSize, \" KB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Total Stars: \", totalStars]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Total Forks: \", totalForks]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Stars per Repository: \", averageStars.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Forks per Repository: \", averageForks.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Repository Activity Level: \", repositoryActivity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(GitHub, \"BaQZKWizU8DhSPb9cKQhySr2aXM=\");\n_c = GitHub;\nvar _c;\n$RefreshReg$(_c, \"GitHub\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","Container","Paper","Box","Button","TextField","Typography","Grid","fetchUserData","fetchPublicRepoData","UserInfo","RepoList","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","GitHub","_s","username","setUsername","user","setUser","publicrepos","setPublicrepos","userDataJSON","setUserDataJSON","combinedInfoJSON","setCombinedInfoJSON","timeOnGitHub","setTimeOnGitHub","activeLevel","setActiveLevel","userValueToGitHub","setUserValueToGitHub","mostUsedLanguage","setMostUsedLanguage","averageRepoSize","setAverageRepoSize","totalStars","setTotalStars","totalForks","setTotalForks","averageStars","setAverageStars","averageForks","setAverageForks","repositoryActivity","setRepositoryActivity","calculateTimeOnGitHub","createdAt","currentDate","Date","createdDate","timeDiff","getTime","daysOnGitHub","Math","floor","calculateActiveLevel","updatedAt","updatedDate","daysSinceLastUpdate","calculateUserValueToGitHub","followers","publicRepos","weightFollowers","weightPublicRepos","userValue","thresholdGood","category","value","calculateAverageRepoSize","repos","length","totalSize","reduce","sum","repo","size","calculateTotalStars","stargazers_count","calculateTotalForks","forks_count","calculateAverageStars","calculateAverageForks","calculateRepositoryActivity","lastPushedDates","map","pushed_at","mostRecentPush","max","apply","daysSinceLastPush","downloadJSON","json","filename","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GenerateAnalysis","trim","dataUser","JSON","stringify","filteredUser","login","html_url","name","company","location","bio","public_repos","following","created_at","updated_at","email","hireable","additionalInfo","combinedInfo","dataPublic","languageCount","forEach","language","Object","keys","a","b","children","elevation","style","padding","marginTop","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","e","target","fullWidth","color","onClick","container","spacing","justifyContent","marginBottom","item","disabled","xs","toFixed","_c","$RefreshReg$"],"sources":["/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/github.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { fetchUserData, fetchPublicRepoData } from '../functions/api';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport { User, PubRepo } from '../types';\nimport GitHubRepos from './graphql';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n\nexport default function GitHub() {\n  const [username, setUsername] = useState<string>('');\n  const [user, setUser] = useState<User | null>(null);\n  const [publicrepos, setPublicrepos] = useState<PubRepo[]>([]);\n  const [userDataJSON, setUserDataJSON] = useState<string>('');\n  const [combinedInfoJSON, setCombinedInfoJSON] = useState<string>('');\n  const [timeOnGitHub, setTimeOnGitHub] = useState<string>('');\n  const [activeLevel, setActiveLevel] = useState<string>('');\n  const [userValueToGitHub, setUserValueToGitHub] = useState<{ category: string, value: number } | null>(null);\n  const [mostUsedLanguage, setMostUsedLanguage] = useState<string>('');\n  const [averageRepoSize, setAverageRepoSize] = useState<number>(0);\n  const [totalStars, setTotalStars] = useState<number>(0);\n  const [totalForks, setTotalForks] = useState<number>(0);\n  const [averageStars, setAverageStars] = useState<number>(0);\n  const [averageForks, setAverageForks] = useState<number>(0);\n  const [repositoryActivity, setRepositoryActivity] = useState<string>('');\n\n  const calculateTimeOnGitHub = (createdAt: string): string => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n\n  const calculateActiveLevel = (updatedAt: string): string => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n\n  const calculateUserValueToGitHub = (followers: number, publicRepos: number): { category: string, value: number } => {\n    const weightFollowers = 0.6;\n    const weightPublicRepos = 0.4;\n    const userValue = (followers * weightFollowers) + (publicRepos * weightPublicRepos);\n    const thresholdGood = 100;\n\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n\n    return { category, value: userValue };\n  };\n\n  const calculateAverageRepoSize = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    const totalSize = repos.reduce((sum, repo) => sum + repo.size, 0);\n    return totalSize / repos.length;\n  };\n\n  const calculateTotalStars = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);\n  };\n\n  const calculateTotalForks = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.forks_count, 0);\n  };\n\n  const calculateAverageStars = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalStars(repos) / repos.length;\n  };\n\n  const calculateAverageForks = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalForks(repos) / repos.length;\n  };\n\n  const calculateRepositoryActivity = (repos: PubRepo[]): string => {\n    const currentDate = new Date();\n    const lastPushedDates = repos.map(repo => new Date(repo.pushed_at).getTime()); // Extract timestamp\n    const mostRecentPush = new Date(Math.max.apply(null, lastPushedDates));\n    const daysSinceLastPush = Math.floor((currentDate.getTime() - mostRecentPush.getTime()) / (1000 * 3600 * 24));\n    \n    if (daysSinceLastPush <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastPush <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastPush <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  \n  const downloadJSON = (json: string, filename: string) => {\n        const blob = new Blob([json], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      };\n\n  const GenerateAnalysis = async () => {\n    if (username.trim() !== '') {\n      const dataUser = await fetchUserData(username);\n      if (dataUser) {\n        setUser(dataUser);\n        setUserDataJSON(JSON.stringify(dataUser, null, 2));\n\n        const filteredUser = {\n          login: dataUser.login,\n          html_url: dataUser.html_url,\n          name: dataUser.name,\n          company: dataUser.company,\n          location: dataUser.location,\n          bio: dataUser.bio,\n          public_repos: dataUser.public_repos,\n          followers: dataUser.followers,\n          following: dataUser.following,\n          created_at: dataUser.created_at,\n          updated_at: dataUser.updated_at,\n          email: dataUser.email,\n          hireable: dataUser.hireable\n        };\n\n        const additionalInfo = {\n          timeOnGitHub: calculateTimeOnGitHub(dataUser.created_at),\n          activeLevel: calculateActiveLevel(dataUser.updated_at),\n          userValueToGitHub: calculateUserValueToGitHub(dataUser.followers, dataUser.public_repos)\n        };\n\n        setTimeOnGitHub(additionalInfo.timeOnGitHub);\n        setActiveLevel(additionalInfo.activeLevel);\n        setUserValueToGitHub(additionalInfo.userValueToGitHub);\n\n        const combinedInfo = {\n          ...filteredUser,\n          ...additionalInfo\n        };\n\n        setCombinedInfoJSON(JSON.stringify(combinedInfo, null, 2));\n      }\n\n      const dataPublic = await fetchPublicRepoData(username);\n      if (dataPublic) {\n        setPublicrepos(dataPublic);\n\n        const languageCount: { [key: string]: number } = {};\n        dataPublic.forEach((repo: PubRepo) => {\n          if (repo.language) {\n            if (languageCount[repo.language]) {\n              languageCount[repo.language]++;\n            } else {\n              languageCount[repo.language] = 1;\n            }\n          }\n        });\n\n        const mostUsedLanguage = Object.keys(languageCount).reduce((a, b) => languageCount[a] > languageCount[b] ? a : b, '');\n        setMostUsedLanguage(mostUsedLanguage);\n\n        setAverageRepoSize(calculateAverageRepoSize(dataPublic));\n        setTotalStars(calculateTotalStars(dataPublic));\n        setTotalForks(calculateTotalForks(dataPublic));\n        setAverageStars(calculateAverageStars(dataPublic));\n        setAverageForks(calculateAverageForks(dataPublic));\n        setRepositoryActivity(calculateRepositoryActivity(dataPublic));\n        \n      }\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\n          <Box mb={3}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              GitHub User and Repo Analysis\n            </Typography>\n          </Box>\n          <Box mb={3}>\n            <TextField\n              label=\"GitHub Username\"\n              variant=\"outlined\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              fullWidth\n            />\n          </Box>\n          <Box mb={3}>\n            <Button variant=\"contained\" color=\"primary\" onClick={GenerateAnalysis}>\n              Generate Analysis\n            </Button>\n          </Box>\n             <Grid container spacing={2} justifyContent=\"center\" style={{ marginBottom: '16px' }}>\n               <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => downloadJSON(userDataJSON, `${username}_data.json`)}\n                  disabled={!userDataJSON}\n                >\n                  Download User Data\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => downloadJSON(JSON.stringify(publicrepos, null, 2), `${username}_repos.json`)}\n                  disabled={publicrepos.length === 0}\n                >\n                  Download Repositories Data\n                </Button>\n              </Grid>\n            </Grid>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              {user && (\n                <UserInfo user={user} timeOnGitHub={timeOnGitHub} activeLevel={activeLevel} userValueToGitHub={userValueToGitHub} mostUsedLanguage={mostUsedLanguage} />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              {publicrepos.length > 0 && (\n                <RepoList publicrepos={publicrepos} />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">Analysis Metrics</Typography>\n              <Typography variant=\"body1\">Average Repository Size: {averageRepoSize} KB</Typography>\n              <Typography variant=\"body1\">Total Stars: {totalStars}</Typography>\n              <Typography variant=\"body1\">Total Forks: {totalForks}</Typography>\n              <Typography variant=\"body1\">Average Stars per Repository: {averageStars.toFixed(2)}</Typography>\n              <Typography variant=\"body1\">Average Forks per Repository: {averageForks.toFixed(2)}</Typography>\n              <Typography variant=\"body1\">Repository Activity Level: {repositoryActivity}</Typography>\n              \n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}