{"ast":null,"code":"var _jsxFileName = \"/Users/evewang/Desktop/Programming/projects/Current_Passion_Project/GitHubVisualization/client/src/components/github.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPublic() {\n  _s();\n  const languageCounts = {};\n  const [username, setUsername] = useState('');\n  const [reponame, setReponame] = useState('');\n\n  //set the state/the initial info of the public repos and the user\n  const [user, setUser] = useState({\n    login: '',\n    html_url: '',\n    name: null,\n    company: null,\n    location: null,\n    bio: null,\n    public_repos: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: '',\n    email: '',\n    hireable: null\n  });\n  const [publicrepos, setPublicrepos] = useState([]);\n\n  //make api calls to retrieve information about the user and the repo\n  const fetchUserData = async () => {\n    try {\n      const responseUser = await fetch(`https://api.github.com/users/${username}`);\n      const dataUser = await responseUser.json();\n      console.log(\"Original dataUser:\", dataUser); //console.log the original information\n      setUser(dataUser); //update the state with the new info\n      const filteredUser = {\n        login: dataUser.login,\n        html_url: dataUser.html_url,\n        name: dataUser.name,\n        company: dataUser.company,\n        location: dataUser.location,\n        bio: dataUser.bio,\n        public_repos: dataUser.public_repos,\n        followers: dataUser.followers,\n        following: dataUser.following,\n        created_at: dataUser.created_at,\n        updated_at: dataUser.updated_at,\n        email: dataUser.email,\n        hireable: dataUser.hireable\n      };\n      const timeOnGitHub = calculateTimeOnGitHub(dataUser.created_at);\n      const activeLevel = calculateActiveLevel(dataUser.updated_at);\n      const userValueToGitHub = calculateUserValueToGitHub(dataUser.followers, dataUser.public_repos);\n      console.log(\"Time on GitHub:\", timeOnGitHub);\n      console.log(\"Active level:\", activeLevel);\n      console.log(\"user_value:\", userValueToGitHub);\n      const additionalInfo = {\n        timeOnGitHub: timeOnGitHub,\n        activeLevel: activeLevel,\n        userValueToGitHub: userValueToGitHub\n      };\n      console.log(\"Additional info:\", additionalInfo);\n      const combinedInfo = {\n        ...filteredUser,\n        ...additionalInfo\n      };\n      console.log(\"Combined info:\", combinedInfo);\n      return JSON.stringify(combinedInfo);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Calculate time_on_github based on user's creation date\n  const calculateTimeOnGitHub = createdAt => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n\n  // Calculate active_level based on last updated date\n  const calculateActiveLevel = updatedAt => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  const calculateUserValueToGitHub = (followers, publicRepos) => {\n    const userValue = followers + publicRepos;\n    const thresholdGood = 100;\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n    return {\n      category,\n      value: userValue\n    };\n  };\n\n  //2. the public repos of a user\n  const fetchPublicRepoData = async () => {\n    try {\n      const responsePublic = await fetch(`https://api.github.com/users/${username}/repos`);\n      const dataPublic = await responsePublic.json();\n      console.log(dataPublic); //console.log the original information\n      setPublicrepos(dataPublic); //update the state with the new info\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  //button to retrieve data from the api\n  const handleButtonClick = () => {\n    if (username.trim() !== '') {\n      fetchUserData();\n      fetchPublicRepoData();\n    } else {\n      alert('Please enter a GitHub username.');\n    }\n  };\n\n  //display the information retrieved from the api\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GitHub Repositories for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter GitHub Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleButtonClick,\n      children: \"Fetch Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter GitHub Reponame\",\n      value: reponame,\n      onChange: e => setReponame(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Original Data User JSON:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: userDataJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Combined Info JSON:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: combinedInfoJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Login: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", user.name || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Profile URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: user.html_url,\n          children: user.html_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Company: \", user.company || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Location: \", user.location || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bio: \", user.bio || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Public Repositories: \", user.public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Followers: \", user.followers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Following: \", user.following]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Joined GitHub: \", user.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Last Updated: \", user.updated_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Email: \", user.email || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Hireable: \", user.hireable ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publicrepos.slice(0, 2).map(publicrepo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: publicrepo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Full Name: \", publicrepo.full_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Private: \", publicrepo.private.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"HTML URL: \", publicrepo.html_url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", publicrepo.description || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fork: \", publicrepo.fork.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"URL: \", publicrepo.url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created At: \", publicrepo.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated At: \", publicrepo.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pushed At: \", publicrepo.pushed_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Homepage: \", publicrepo.homepage || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", publicrepo.size]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Stargazers Count: \", publicrepo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Watchers Count: \", publicrepo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Language: \", publicrepo.language || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Issues: \", publicrepo.has_issues.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Projects: \", publicrepo.has_projects.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Downloads: \", publicrepo.has_downloads.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Wiki: \", publicrepo.has_wiki.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Pages: \", publicrepo.has_pages.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Has Discussions: \", publicrepo.has_discussions.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Forks Count: \", publicrepo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mirror URL: \", publicrepo.mirror_url || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Archived: \", publicrepo.archived.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Disabled: \", publicrepo.disabled.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Open Issues Count: \", publicrepo.open_issues_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"License: \", publicrepo.license || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Web Commit Signoff Required: \", publicrepo.web_commit_signoff_required.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Topics: \", publicrepo.topics.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Visibility: \", publicrepo.visibility]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Forks: \", publicrepo.forks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Open Issues: \", publicrepo.open_issues]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Watchers: \", publicrepo.watchers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Default Branch: \", publicrepo.default_branch]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, publicrepo.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPublic, \"40QzS99usufZQjftphJkejMlYsY=\");\n_c = UserPublic;\n;\nvar _c;\n$RefreshReg$(_c, \"UserPublic\");","map":{"version":3,"names":["React","useState","Button","TextField","jsxDEV","_jsxDEV","UserPublic","_s","languageCounts","username","setUsername","reponame","setReponame","user","setUser","login","html_url","name","company","location","bio","public_repos","followers","following","created_at","updated_at","email","hireable","publicrepos","setPublicrepos","fetchUserData","responseUser","fetch","dataUser","json","console","log","filteredUser","timeOnGitHub","calculateTimeOnGitHub","activeLevel","calculateActiveLevel","userValueToGitHub","calculateUserValueToGitHub","additionalInfo","combinedInfo","JSON","stringify","error","createdAt","currentDate","Date","createdDate","timeDiff","getTime","daysOnGitHub","Math","floor","updatedAt","updatedDate","daysSinceLastUpdate","publicRepos","userValue","thresholdGood","category","value","fetchPublicRepoData","responsePublic","dataPublic","handleButtonClick","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","e","target","variant","onClick","userDataJSON","combinedInfoJSON","href","slice","map","publicrepo","full_name","private","toString","description","fork","url","pushed_at","homepage","size","stargazers_count","watchers_count","language","has_issues","has_projects","has_downloads","has_wiki","has_pages","has_discussions","forks_count","mirror_url","archived","disabled","open_issues_count","license","web_commit_signoff_required","topics","join","visibility","forks","open_issues","watchers","default_branch","_c","$RefreshReg$"],"sources":["/Users/evewang/Desktop/Programming/projects/Current_Passion_Project/GitHubVisualization/client/src/components/github.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { User, PubRepo,PubPriRepo,Commit } from '../types';\n\nexport default function UserPublic() {\n  const languageCounts: { [key: string]: number } = {};\n  const [username, setUsername] = useState<string>('');\n  const [reponame, setReponame] = useState<string>('');\n\n  //set the state/the initial info of the public repos and the user\n  const [user, setUser] = useState<User>({\n    login: '',\n    html_url: '',\n    name: null,\n    company: null,\n    location: null,\n    bio: null,\n    public_repos: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: '',\n    email: '', \n    hireable: null\n  });\n  const [publicrepos, setPublicrepos] = useState<PubRepo[]>([]);\n\n  //make api calls to retrieve information about the user and the repo\n  const fetchUserData = async () => {\n    try{\n      const responseUser=await fetch (`https://api.github.com/users/${username}`);\n      const dataUser=await responseUser.json();\n      console.log(\"Original dataUser:\", dataUser); //console.log the original information\n      setUser(dataUser);//update the state with the new info\n      const filteredUser = {\n        login: dataUser.login,\n        html_url: dataUser.html_url,\n        name: dataUser.name,\n        company: dataUser.company,\n        location: dataUser.location,\n        bio: dataUser.bio,\n        public_repos: dataUser.public_repos,\n        followers: dataUser.followers,\n        following: dataUser.following,\n        created_at: dataUser.created_at,\n        updated_at: dataUser.updated_at,\n        email: dataUser.email,\n        hireable: dataUser.hireable\n      };\n\n      const timeOnGitHub = calculateTimeOnGitHub(dataUser.created_at);\n      const activeLevel = calculateActiveLevel(dataUser.updated_at);\n      const userValueToGitHub = calculateUserValueToGitHub(dataUser.followers, dataUser.public_repos);\n\n      console.log(\"Time on GitHub:\", timeOnGitHub);\n      console.log(\"Active level:\", activeLevel);\n      console.log(\"user_value:\",userValueToGitHub);\n      const additionalInfo = {\n        timeOnGitHub: timeOnGitHub,\n        activeLevel: activeLevel,\n        userValueToGitHub: userValueToGitHub\n      };\n\n      console.log(\"Additional info:\", additionalInfo);\n      const combinedInfo = {\n        ...filteredUser,\n        ...additionalInfo\n      };\n      console.log(\"Combined info:\", combinedInfo);\n      return JSON.stringify(combinedInfo);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Calculate time_on_github based on user's creation date\n  const calculateTimeOnGitHub = (createdAt: string): string => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n\n  // Calculate active_level based on last updated date\n  const calculateActiveLevel = (updatedAt: string): string => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n\n  const calculateUserValueToGitHub = (followers: number, publicRepos: number): { category: string, value: number } => {\n    const userValue = followers + publicRepos;\n    const thresholdGood = 100; \n  \n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n  \n    return { category, value: userValue };\n  };\n\n  //2. the public repos of a user\n  const fetchPublicRepoData = async () => {\n    try {\n      const responsePublic = await fetch(`https://api.github.com/users/${username}/repos`);\n      const dataPublic = await responsePublic.json();\n      console.log(dataPublic);//console.log the original information\n      setPublicrepos(dataPublic);//update the state with the new info\n\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  //button to retrieve data from the api\n  const handleButtonClick = () => {\n    if (username.trim() !== '') {\n      fetchUserData();\n      fetchPublicRepoData();\n    } else {\n      alert('Please enter a GitHub username.');\n    }\n  };\n\n  //display the information retrieved from the api\n  return (\n    <div>\n      <h1>GitHub Repositories for {username}</h1>\n      <TextField\n        label=\"Enter GitHub Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button variant=\"contained\" onClick={handleButtonClick}>\n        Fetch Repositories\n      </Button>\n      <TextField\n        label=\"Enter GitHub Reponame\"\n        value={reponame}\n        onChange={(e) => setReponame(e.target.value)}\n      />\n\n      {/* Display original dataUser JSON */}\n      <div>\n        <h2>Original Data User JSON:</h2>\n        <pre>{userDataJSON}</pre>\n      </div>\n\n      {/* Display combined info JSON */}\n      <div>\n        <h2>Combined Info JSON:</h2>\n        <pre>{combinedInfoJSON}</pre>\n      </div>\n      \n      <ul>\n        <li>Login: {user.login}</li>\n        <li>Name: {user.name || 'N/A'}</li>\n        <li>Profile URL: <a href={user.html_url}>{user.html_url}</a></li>\n        <li>Company: {user.company || 'N/A'}</li>\n        <li>Location: {user.location || 'N/A'}</li>\n        <li>Bio: {user.bio || 'N/A'}</li>\n        <li>Public Repositories: {user.public_repos}</li>\n        <li>Followers: {user.followers}</li>\n        <li>Following: {user.following}</li>\n        <li>Joined GitHub: {user.created_at}</li>\n        <li>Last Updated: {user.updated_at}</li>\n        <li>Email: {user.email || 'N/A'}</li>\n        <li>Hireable: {user.hireable ? 'Yes' : 'No'}</li>\n      </ul>\n\n      <ul>\n      {publicrepos.slice(0, 2).map((publicrepo) => {\n        return (\n          <li key={publicrepo.name}>\n            <h3>{publicrepo.name}</h3>\n            <p>Full Name: {publicrepo.full_name}</p>\n            <p>Private: {publicrepo.private.toString()}</p>\n            <p>HTML URL: {publicrepo.html_url}</p>\n            <p>Description: {publicrepo.description || 'N/A'}</p>\n            <p>Fork: {publicrepo.fork.toString()}</p>\n            <p>URL: {publicrepo.url}</p>\n            <p>Created At: {publicrepo.created_at}</p>\n            <p>Updated At: {publicrepo.updated_at}</p>\n            <p>Pushed At: {publicrepo.pushed_at}</p>\n            <p>Homepage: {publicrepo.homepage || 'N/A'}</p>\n            <p>Size: {publicrepo.size}</p>\n            <p>Stargazers Count: {publicrepo.stargazers_count}</p>\n            <p>Watchers Count: {publicrepo.watchers_count}</p>\n            <p>Language: {publicrepo.language || 'N/A'}</p>\n            <p>Has Issues: {publicrepo.has_issues.toString()}</p>\n            <p>Has Projects: {publicrepo.has_projects.toString()}</p>\n            <p>Has Downloads: {publicrepo.has_downloads.toString()}</p>\n            <p>Has Wiki: {publicrepo.has_wiki.toString()}</p>\n            <p>Has Pages: {publicrepo.has_pages.toString()}</p>\n            <p>Has Discussions: {publicrepo.has_discussions.toString()}</p>\n            <p>Forks Count: {publicrepo.forks_count}</p>\n            <p>Mirror URL: {publicrepo.mirror_url || 'N/A'}</p>\n            <p>Archived: {publicrepo.archived.toString()}</p>\n            <p>Disabled: {publicrepo.disabled.toString()}</p>\n            <p>Open Issues Count: {publicrepo.open_issues_count}</p>\n            <p>License: {publicrepo.license || 'N/A'}</p>\n            <p>Web Commit Signoff Required: {publicrepo.web_commit_signoff_required.toString()}</p>\n            <p>Topics: {publicrepo.topics.join(', ')}</p>\n            <p>Visibility: {publicrepo.visibility}</p>\n            <p>Forks: {publicrepo.forks}</p>\n            <p>Open Issues: {publicrepo.open_issues}</p>\n            <p>Watchers: {publicrepo.watchers}</p>\n            <p>Default Branch: {publicrepo.default_branch}</p>\n          </li>\n        );\n      })}\n    </ul>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}