{"ast":null,"code":"var _jsxFileName = \"/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/github.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { fetchUserData, fetchPublicRepoData } from '../functions/api';\nimport UserInfo from './UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  }\n});\nexport default function GitHub() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n  const [publicrepos, setPublicrepos] = useState([]);\n  const [userDataJSON, setUserDataJSON] = useState('');\n  const [combinedInfoJSON, setCombinedInfoJSON] = useState('');\n  const [timeOnGitHub, setTimeOnGitHub] = useState('');\n  const [activeLevel, setActiveLevel] = useState('');\n  const [userValue, setUserValue] = useState(null);\n  const [mostUsedLanguage, setMostUsedLanguage] = useState('');\n  const [averageRepoSize, setAverageRepoSize] = useState(0);\n  const [totalStars, setTotalStars] = useState(0);\n  const [totalForks, setTotalForks] = useState(0);\n  const [averageStars, setAverageStars] = useState(0);\n  const [averageForks, setAverageForks] = useState(0);\n  const [repositoryActivity, setRepositoryActivity] = useState('');\n\n  //1. user information manipulation and generation of insights:\n  const calculateTimeOnGitHub = createdAt => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n  const calculateActiveLevel = updatedAt => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  const calculateUserValue = (followers, publicRepos) => {\n    const weightFollowers = 0.6;\n    const weightPublicRepos = 0.4;\n    const userValue = followers * weightFollowers + publicRepos * weightPublicRepos;\n    const thresholdGood = 100;\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n    return {\n      category,\n      value: userValue\n    };\n  };\n\n  //2. user repo information manipulation and generation of insights\n  const calculateMostUsedLanguage = repos => {\n    const languageCount = {};\n    repos.forEach(repo => {\n      if (repo.language) {\n        if (languageCount[repo.language]) {\n          languageCount[repo.language]++;\n        } else {\n          languageCount[repo.language] = 1;\n        }\n      }\n    });\n    return Object.keys(languageCount).reduce((a, b) => languageCount[a] > languageCount[b] ? a : b, '');\n  };\n  const calculateAverageRepoSize = repos => {\n    if (repos.length === 0) return 0;\n    const totalSize = repos.reduce((sum, repo) => sum + repo.size, 0);\n    return totalSize / repos.length;\n  };\n  const calculateTotalStars = repos => {\n    return repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);\n  };\n  const calculateTotalForks = repos => {\n    return repos.reduce((sum, repo) => sum + repo.forks_count, 0);\n  };\n  const calculateAverageStars = repos => {\n    if (repos.length === 0) return 0;\n    return calculateTotalStars(repos) / repos.length;\n  };\n  const calculateAverageForks = repos => {\n    if (repos.length === 0) return 0;\n    return calculateTotalForks(repos) / repos.length;\n  };\n  const calculateRepositoryActivity = repos => {\n    const currentDate = new Date();\n    const lastPushedDates = repos.map(repo => new Date(repo.pushed_at).getTime()); // Extract timestamp\n    const mostRecentPush = new Date(Math.max.apply(null, lastPushedDates));\n    const daysSinceLastPush = Math.floor((currentDate.getTime() - mostRecentPush.getTime()) / (1000 * 3600 * 24));\n    if (daysSinceLastPush <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastPush <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastPush <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n\n  //enable the download original json data function\n  const downloadJSON = (json, filename) => {\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const RepoList = ({\n    publicrepos\n  }) => {\n    /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publicrepos.slice(0, 5).map(publicrepo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: publicrepo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Repo Full Name: \", publicrepo.full_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"HTML URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: publicrepo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: publicrepo.html_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", publicrepo.description || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", publicrepo.language || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fork: \", publicrepo.fork.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", publicrepo.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated At: \", publicrepo.updated_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pushed At: \", publicrepo.pushed_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", publicrepo.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stargazers Count: \", publicrepo.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Watchers Count: \", publicrepo.watchers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forks Count: \", publicrepo.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"License: \", publicrepo.license ? publicrepo.license.name : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Visibility: \", publicrepo.visibility]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forks: \", publicrepo.forks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Watchers: \", publicrepo.watchers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Default Branch: \", publicrepo.default_branch]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: publicrepo.html_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Repository Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, publicrepo.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }, this);\n  };\n\n  //the analysis function\n  const GenerateAnalysis = async () => {\n    if (username.trim() !== '') {\n      //set the user data\n      const dataUser = await fetchUserData(username);\n      if (dataUser) {\n        setUser(dataUser);\n        setUserDataJSON(JSON.stringify(dataUser, null, 2));\n        const filteredUser = {\n          login: dataUser.login,\n          html_url: dataUser.html_url,\n          name: dataUser.name,\n          company: dataUser.company,\n          location: dataUser.location,\n          bio: dataUser.bio,\n          public_repos: dataUser.public_repos,\n          followers: dataUser.followers,\n          following: dataUser.following,\n          created_at: dataUser.created_at,\n          updated_at: dataUser.updated_at,\n          email: dataUser.email,\n          hireable: dataUser.hireable\n        };\n        const additionalInfo = {\n          timeOnGitHub: calculateTimeOnGitHub(dataUser.created_at),\n          activeLevel: calculateActiveLevel(dataUser.updated_at),\n          userValue: calculateUserValue(dataUser.followers, dataUser.public_repos)\n        };\n        setTimeOnGitHub(additionalInfo.timeOnGitHub);\n        setActiveLevel(additionalInfo.activeLevel);\n        setUserValue(additionalInfo.userValue);\n        const combinedInfo = {\n          ...filteredUser,\n          ...additionalInfo\n        };\n        setCombinedInfoJSON(JSON.stringify(combinedInfo, null, 2));\n      }\n\n      //set the public repo data\n      const dataPublic = await fetchPublicRepoData(username);\n      if (dataPublic) {\n        setPublicrepos(dataPublic);\n        setMostUsedLanguage(calculateMostUsedLanguage(dataPublic));\n        setAverageRepoSize(calculateAverageRepoSize(dataPublic));\n        setTotalStars(calculateTotalStars(dataPublic));\n        setTotalForks(calculateTotalForks(dataPublic));\n        setAverageStars(calculateAverageStars(dataPublic));\n        setAverageForks(calculateAverageForks(dataPublic));\n        setRepositoryActivity(calculateRepositoryActivity(dataPublic));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        fontFamily: 'Arial'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px',\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"GitHub User and Repo Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"for Recruiters \\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"GitHub Username\",\n            variant: \"outlined\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: GenerateAnalysis,\n            style: {\n              backgroundColor: 'lightblue'\n            },\n            children: \"\\u2705 Generate Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"center\",\n          style: {\n            marginBottom: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => downloadJSON(userDataJSON, `${username}_data.json`),\n              disabled: !userDataJSON,\n              style: {\n                backgroundColor: 'lightblue'\n              },\n              children: \"\\u2B07\\uFE0F Download Original User Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => downloadJSON(JSON.stringify(publicrepos, null, 2), `${username}_repos.json`),\n              disabled: publicrepos.length === 0,\n              style: {\n                backgroundColor: 'lightblue'\n              },\n              children: \"\\u2B07\\uFE0F Download Original Repository Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            backgroundColor: 'lightblue',\n            borderRadius: '10px',\n            padding: '5px'\n          },\n          children: \"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB User Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: user && /*#__PURE__*/_jsxDEV(UserInfo, {\n              user: user,\n              timeOnGitHub: timeOnGitHub,\n              activeLevel: activeLevel,\n              userValue: userValue,\n              mostUsedLanguage: mostUsedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            backgroundColor: 'lightblue',\n            borderRadius: '10px',\n            padding: '5px'\n          },\n          children: \"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBB Repository Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }, this), mostUsedLanguage && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Most Frequently Used Programming Language: \", mostUsedLanguage]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Repository Size: \", averageRepoSize, \" KB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Total Stars: \", totalStars]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Total Forks: \", totalForks]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Stars per Repository: \", averageStars.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Average Forks per Repository: \", averageForks.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Repository Activity Level: \", repositoryActivity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            backgroundColor: 'lightblue',\n            borderRadius: '10px',\n            padding: '5px'\n          },\n          children: \"\\u270D\\uFE0F Filtered User Repository Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: publicrepos.length > 0 && /*#__PURE__*/_jsxDEV(RepoList, {\n              publicrepos: publicrepos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 1\n  }, this);\n}\n_s(GitHub, \"kdhdRa11Q7kUFGkzU8MVX6Ea7Oc=\");\n_c = GitHub;\nvar _c;\n$RefreshReg$(_c, \"GitHub\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","Container","Paper","Box","Button","TextField","Typography","Grid","fetchUserData","fetchPublicRepoData","UserInfo","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","GitHub","_s","username","setUsername","user","setUser","publicrepos","setPublicrepos","userDataJSON","setUserDataJSON","combinedInfoJSON","setCombinedInfoJSON","timeOnGitHub","setTimeOnGitHub","activeLevel","setActiveLevel","userValue","setUserValue","mostUsedLanguage","setMostUsedLanguage","averageRepoSize","setAverageRepoSize","totalStars","setTotalStars","totalForks","setTotalForks","averageStars","setAverageStars","averageForks","setAverageForks","repositoryActivity","setRepositoryActivity","calculateTimeOnGitHub","createdAt","currentDate","Date","createdDate","timeDiff","getTime","daysOnGitHub","Math","floor","calculateActiveLevel","updatedAt","updatedDate","daysSinceLastUpdate","calculateUserValue","followers","publicRepos","weightFollowers","weightPublicRepos","thresholdGood","category","value","calculateMostUsedLanguage","repos","languageCount","forEach","repo","language","Object","keys","reduce","a","b","calculateAverageRepoSize","length","totalSize","sum","size","calculateTotalStars","stargazers_count","calculateTotalForks","forks_count","calculateAverageStars","calculateAverageForks","calculateRepositoryActivity","lastPushedDates","map","pushed_at","mostRecentPush","max","apply","daysSinceLastPush","downloadJSON","json","filename","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","RepoList","children","slice","publicrepo","name","fileName","_jsxFileName","lineNumber","columnNumber","full_name","html_url","target","rel","description","fork","toString","created_at","updated_at","watchers_count","license","visibility","forks","watchers","default_branch","GenerateAnalysis","trim","dataUser","JSON","stringify","filteredUser","login","company","location","bio","public_repos","following","email","hireable","additionalInfo","combinedInfo","dataPublic","style","display","justifyContent","alignItems","minHeight","fontFamily","elevation","padding","marginTop","textAlign","mb","variant","component","gutterBottom","label","onChange","e","fullWidth","color","onClick","backgroundColor","container","spacing","marginBottom","item","disabled","borderRadius","xs","toFixed","_c","$RefreshReg$"],"sources":["/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/code/src/components/github.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport { fetchUserData, fetchPublicRepoData } from '../functions/api';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport { User, PubRepo } from '../types';\nimport GitHubRepos from './graphql';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n\nexport default function GitHub() {\n  const [username, setUsername] = useState<string>('');\n  const [user, setUser] = useState<User | null>(null);\n  const [publicrepos, setPublicrepos] = useState<PubRepo[]>([]);\n  const [userDataJSON, setUserDataJSON] = useState<string>('');\n  const [combinedInfoJSON, setCombinedInfoJSON] = useState<string>('');\n  const [timeOnGitHub, setTimeOnGitHub] = useState<string>('');\n  const [activeLevel, setActiveLevel] = useState<string>('');\n  const [userValue, setUserValue] = useState<{ category: string, value: number } | null>(null);\n  const [mostUsedLanguage, setMostUsedLanguage] = useState<string>('');\n  const [averageRepoSize, setAverageRepoSize] = useState<number>(0);\n  const [totalStars, setTotalStars] = useState<number>(0);\n  const [totalForks, setTotalForks] = useState<number>(0);\n  const [averageStars, setAverageStars] = useState<number>(0);\n  const [averageForks, setAverageForks] = useState<number>(0);\n  const [repositoryActivity, setRepositoryActivity] = useState<string>('');\n\n  //1. user information manipulation and generation of insights:\n  const calculateTimeOnGitHub = (createdAt: string): string => {\n    const currentDate = new Date();\n    const createdDate = new Date(createdAt);\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\n    const daysOnGitHub = Math.floor(timeDiff / (1000 * 3600 * 24));\n    return `${daysOnGitHub} days`;\n  };\n\n  const calculateActiveLevel = (updatedAt: string): string => {\n    const currentDate = new Date();\n    const updatedDate = new Date(updatedAt);\n    const timeDiff = currentDate.getTime() - updatedDate.getTime();\n    const daysSinceLastUpdate = Math.floor(timeDiff / (1000 * 3600 * 24));\n\n    if (daysSinceLastUpdate <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastUpdate <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastUpdate <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n\n  const calculateUserValue= (followers: number, publicRepos: number): { category: string, value: number } => {\n    const weightFollowers = 0.6;\n    const weightPublicRepos = 0.4;\n    const userValue = (followers * weightFollowers) + (publicRepos * weightPublicRepos);\n    const thresholdGood = 100;\n\n    let category = \"\";\n    if (userValue < thresholdGood) {\n      category = \"Relatively good user value\";\n    } else if (userValue < 2 * thresholdGood) {\n      category = \"Okay user value\";\n    } else {\n      category = \"Great user value\";\n    }\n\n    return { category, value: userValue };\n  };\n\n  //2. user repo information manipulation and generation of insights\n  const calculateMostUsedLanguage = (repos: PubRepo[]): string => {\n    const languageCount: { [key: string]: number } = {};\n    repos.forEach((repo: PubRepo) => {\n      if (repo.language) {\n        if (languageCount[repo.language]) {\n          languageCount[repo.language]++;\n        } else {\n          languageCount[repo.language] = 1;\n        }\n      }\n    });\n    return Object.keys(languageCount).reduce((a, b) => languageCount[a] > languageCount[b] ? a : b, '');\n  };\n\n  const calculateAverageRepoSize = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    const totalSize = repos.reduce((sum, repo) => sum + repo.size, 0);\n    return totalSize / repos.length;\n  };\n\n  const calculateTotalStars = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);\n  };\n\n  const calculateTotalForks = (repos: PubRepo[]): number => {\n    return repos.reduce((sum, repo) => sum + repo.forks_count, 0);\n  };\n\n  const calculateAverageStars = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalStars(repos) / repos.length;\n  };\n\n  const calculateAverageForks = (repos: PubRepo[]): number => {\n    if (repos.length === 0) return 0;\n    return calculateTotalForks(repos) / repos.length;\n  };\n\n  const calculateRepositoryActivity = (repos: PubRepo[]): string => {\n    const currentDate = new Date();\n    const lastPushedDates = repos.map(repo => new Date(repo.pushed_at).getTime()); // Extract timestamp\n    const mostRecentPush = new Date(Math.max.apply(null, lastPushedDates));\n    const daysSinceLastPush = Math.floor((currentDate.getTime() - mostRecentPush.getTime()) / (1000 * 3600 * 24));\n    \n    if (daysSinceLastPush <= 30) {\n      return \"Very Active\";\n    } else if (daysSinceLastPush <= 90) {\n      return \"Relatively Active\";\n    } else if (daysSinceLastPush <= 365) {\n      return \"Not Very Active\";\n    } else {\n      return \"Not Active\";\n    }\n  };\n  \n  //enable the download original json data function\n  const downloadJSON = (json: string, filename: string) => {\n        const blob = new Blob([json], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      };\n\n  const RepoList: React.FC<{ publicrepos: PubRepo[] }> = ({ publicrepos }) => {\n          <ul>\n            {publicrepos.slice(0, 5).map((publicrepo) => (\n              <div key={publicrepo.name}>\n                <h3>{publicrepo.name}</h3>\n                <p>Repo Full Name: {publicrepo.full_name}</p>\n                <p>HTML URL: <a href={publicrepo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{publicrepo.html_url}</a></p>\n                <p>Description: {publicrepo.description || 'N/A'}</p>\n                <p>Language: {publicrepo.language || 'N/A'}</p>\n                <p>Fork: {publicrepo.fork.toString()}</p>\n                <p>Created At: {publicrepo.created_at}</p>\n                <p>Updated At: {publicrepo.updated_at}</p>\n                <p>Pushed At: {publicrepo.pushed_at}</p>\n                <p>Size: {publicrepo.size}</p>\n                <p>Stargazers Count: {publicrepo.stargazers_count}</p>\n                <p>Watchers Count: {publicrepo.watchers_count}</p>\n                <p>Forks Count: {publicrepo.forks_count}</p>\n                <p>License: {publicrepo.license ? publicrepo.license.name : 'N/A'}</p>\n                <p>Visibility: {publicrepo.visibility}</p>\n                <p>Forks: {publicrepo.forks}</p>\n                <p>Watchers: {publicrepo.watchers}</p>\n                <p>Default Branch: {publicrepo.default_branch}</p>\n                <a href={publicrepo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Repository Link</a>\n              </div>\n            ))}\n          </ul>\n      };\n      \n  \n  //the analysis function\n  const GenerateAnalysis = async () => {\n    if (username.trim() !== '') {\n      //set the user data\n      const dataUser = await fetchUserData(username);\n      if (dataUser) {\n        setUser(dataUser);\n        setUserDataJSON(JSON.stringify(dataUser, null, 2));\n\n        const filteredUser = {\n          login: dataUser.login,\n          html_url: dataUser.html_url,\n          name: dataUser.name,\n          company: dataUser.company,\n          location: dataUser.location,\n          bio: dataUser.bio,\n          public_repos: dataUser.public_repos,\n          followers: dataUser.followers,\n          following: dataUser.following,\n          created_at: dataUser.created_at,\n          updated_at: dataUser.updated_at,\n          email: dataUser.email,\n          hireable: dataUser.hireable\n        };\n\n        const additionalInfo = {\n          timeOnGitHub: calculateTimeOnGitHub(dataUser.created_at),\n          activeLevel: calculateActiveLevel(dataUser.updated_at),\n          userValue: calculateUserValue(dataUser.followers, dataUser.public_repos)\n        };\n\n        setTimeOnGitHub(additionalInfo.timeOnGitHub);\n        setActiveLevel(additionalInfo.activeLevel);\n        setUserValue(additionalInfo.userValue);\n\n        const combinedInfo = {\n          ...filteredUser,\n          ...additionalInfo\n        };\n\n        setCombinedInfoJSON(JSON.stringify(combinedInfo, null, 2));\n      }\n\n      //set the public repo data\n      const dataPublic = await fetchPublicRepoData(username);\n      if (dataPublic) {\n        setPublicrepos(dataPublic);\n\n        setMostUsedLanguage(calculateMostUsedLanguage(dataPublic));\n        setAverageRepoSize(calculateAverageRepoSize(dataPublic));\n        setTotalStars(calculateTotalStars(dataPublic));\n        setTotalForks(calculateTotalForks(dataPublic));\n        setAverageStars(calculateAverageStars(dataPublic));\n        setAverageForks(calculateAverageForks(dataPublic));\n        setRepositoryActivity(calculateRepositoryActivity(dataPublic));\n        \n      }\n    }\n  };\n\n  return (\n<ThemeProvider theme={theme}>\n  <Container style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', fontFamily: 'Arial' }}>\n    <Paper elevation={3} style={{ padding: '20px', marginTop: '20px', textAlign: 'center' }}>\n      <Box mb={3}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          GitHub User and Repo Analysis\n        </Typography>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          for Recruiters 🔍\n        </Typography>\n      </Box>\n      <Box mb={3}>\n        <TextField\n          label=\"GitHub Username\"\n          variant=\"outlined\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          fullWidth\n        />\n      </Box>\n      <Box mb={1}>\n        <Button variant=\"contained\" color=\"primary\" onClick={GenerateAnalysis} style={{ backgroundColor: 'lightblue' }}>\n          ✅ Generate Analysis\n        </Button>\n      </Box>\n      <Grid container spacing={2} justifyContent=\"center\" style={{ marginBottom: '16px' }}>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => downloadJSON(userDataJSON, `${username}_data.json`)}\n            disabled={!userDataJSON}\n            style={{ backgroundColor: 'lightblue' }}\n          >\n            ⬇️ Download Original User Data\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => downloadJSON(JSON.stringify(publicrepos, null, 2), `${username}_repos.json`)}\n            disabled={publicrepos.length === 0}\n            style={{ backgroundColor: 'lightblue' }}\n          >\n            ⬇️ Download Original Repository Data\n          </Button>\n        </Grid>\n      </Grid>\n      <br/>\n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>👩🏻‍💻 User Analysis</Typography>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={12}>\n          {user && (\n            <UserInfo user={user} timeOnGitHub={timeOnGitHub} activeLevel={activeLevel} userValue={userValue} mostUsedLanguage={mostUsedLanguage} />\n          )}\n        </Grid>\n      </Grid>\n      <br/>\n      <br/>\n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>👨🏼‍💻 Repository Analysis</Typography>\n      {mostUsedLanguage && (\n        <Grid container spacing={3} justifyContent=\"center\">\n          <Grid item xs={12}>\n            <br/>\n            <Typography variant=\"body1\">Most Frequently Used Programming Language: {mostUsedLanguage}</Typography>\n            <Typography variant=\"body1\">Average Repository Size: {averageRepoSize} KB</Typography>\n            <Typography variant=\"body1\">Total Stars: {totalStars}</Typography>\n            <Typography variant=\"body1\">Total Forks: {totalForks}</Typography>\n            <Typography variant=\"body1\">Average Stars per Repository: {averageStars.toFixed(2)}</Typography>\n            <Typography variant=\"body1\">Average Forks per Repository: {averageForks.toFixed(2)}</Typography>\n            <Typography variant=\"body1\">Repository Activity Level: {repositoryActivity}</Typography>\n          </Grid>\n        </Grid>\n      )}\n\n      <br/>\n      <br/>\n      <Typography variant=\"h5\" style={{ backgroundColor: 'lightblue', borderRadius: '10px', padding: '5px' }}>✍️ Filtered User Repository Details</Typography>\n\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={12}>\n          {publicrepos.length > 0 && (\n            <RepoList publicrepos={publicrepos} />\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  </Container>\n</ThemeProvider>  \n  );\n}  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}