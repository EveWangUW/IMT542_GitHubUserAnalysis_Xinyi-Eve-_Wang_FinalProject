{"ast":null,"code":"import fetch from 'node-fetch';\n\n// Your GitHub personal access token\nconst TOKEN = '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';\n\n// The GraphQL query\nconst query = `\n{\n  user(login: \"username\") {\n    repositories(first: 5) {\n      nodes {\n        name\n        description\n      }\n    }\n  }\n}`;\n\n// The endpoint URL\nconst url = 'https://api.github.com/graphql';\n\n// The headers for the request\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`,\n  'Content-Type': 'application/json'\n};\n\n// The request payload\nconst payload = {\n  query: query\n};\n\n// Make the POST request\nfetch(url, {\n  method: 'POST',\n  headers: headers,\n  body: JSON.stringify(payload)\n}).then(response => response.json()).then(data => {\n  console.log(data);\n}).catch(error => {\n  console.error('Error:', error);\n});","map":{"version":3,"names":["fetch","TOKEN","query","url","headers","payload","method","body","JSON","stringify","then","response","json","data","console","log","catch","error"],"sources":["/Users/evewang/Desktop/UW/spring/542a portal information structures/IMT542_GitHubUserAnalysis_Xinyi(Eve)_Wang/src/components/graphql.tsx"],"sourcesContent":["import fetch from 'node-fetch';\n\n// Your GitHub personal access token\nconst TOKEN = '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';\n\n// The GraphQL query\nconst query = `\n{\n  user(login: \"username\") {\n    repositories(first: 5) {\n      nodes {\n        name\n        description\n      }\n    }\n  }\n}`;\n\n// The endpoint URL\nconst url = 'https://api.github.com/graphql';\n\n// The headers for the request\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`,\n  'Content-Type': 'application/json'\n};\n\n// The request payload\nconst payload = {\n  query: query\n};\n\n// Make the POST request\nfetch(url, {\n  method: 'POST',\n  headers: headers,\n  body: JSON.stringify(payload)\n})\n  .then(response => response.json())\n  .then(data => {\n    console.log(data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;;AAE9B;AACA,MAAMC,KAAK,GAAG,+FAA+F;;AAE7G;AACA,MAAMC,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,MAAMC,GAAG,GAAG,gCAAgC;;AAE5C;AACA,MAAMC,OAAO,GAAG;EACd,eAAe,EAAG,UAASH,KAAM,EAAC;EAClC,cAAc,EAAE;AAClB,CAAC;;AAED;AACA,MAAMI,OAAO,GAAG;EACdH,KAAK,EAAEA;AACT,CAAC;;AAED;AACAF,KAAK,CAACG,GAAG,EAAE;EACTG,MAAM,EAAE,MAAM;EACdF,OAAO,EAAEA,OAAO;EAChBG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;AAC9B,CAAC,CAAC,CACCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;EACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;AACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;EACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;AAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}